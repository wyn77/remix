{
	"id": "b3275a0124e46afd7b43baad926b875d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/自己写个矿池,定息矿池.sol": {
				"content": " // SPDX-License-Identifier: MIT  \r\n\r\npragma solidity ^0.8.7;  \r\n \r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint);\r\n\r\n    function balanceOf(address account) external view returns (uint);\r\n\r\n    function transfer(address recipient, uint amout) external returns (bool);\r\n\r\n    function allowance(address owner, address spender) external view returns (uint);\r\n\r\n    function approve(address spender, uint amout) external returns (bool);\r\n\r\n    function transferFrom(address sender, address recipient, uint amout) external returns (bool);\r\n\r\n    event Trasfer(address indexed from, address indexed to, uint amout);\r\n    event Approveal(address indexed owner, address indexed spender, uint amout);\r\n\r\n}\r\n\r\ncontract StakeContract {\r\n    // uint public stakeTime;\r\n    uint public ratio;\r\n    address public staketoken;\r\n    address public totoken;\r\n    uint public stakeSupple;\r\n    address public owner;\r\n    \r\n    event Trasfer(address indexed from, address indexed to, uint amout);\r\n    event Approveal(address indexed owner, address indexed spender, uint amout);\r\n    event transfer(address indexed to, uint amout);\r\n\r\n    struct User {\r\n        uint stakeNumber;\r\n        uint last_Stake_Time;\r\n        uint last_totoken_ratio;\r\n        uint whole_ratio;\r\n        uint last_totoken_Time;\r\n    }\r\n\r\n    mapping(address => User) public User_Map;\r\n\r\n    constructor (address _staketoken, address _totoken) {\r\n        owner = msg.sender;\r\n        require(_staketoken != address(0),\"NOT,S 0X ADDRESS\");\r\n        require(_totoken != address(0),\"NOT,S 0X ADDRESS\");\r\n        require(_staketoken == _totoken,\"NEED agreement\");\r\n        staketoken = _staketoken;\r\n        totoken = _totoken;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner , \"not owner\");\r\n        _;\r\n    }\r\n\r\n    // function getStakeTime() public view returns (uint) {\r\n    //     return stakeTime;\r\n    // }\r\n\r\n    function setRatio(uint _ratio) external onlyOwner {    \r\n        ratio = _ratio;     \r\n    }\r\n\r\n    function Stake(uint _amount) public returns (bool){\r\n\r\n        IERC20(staketoken).transferFrom(msg.sender, address(this), _amount); \r\n\r\n        emit Trasfer(msg.sender, address(this), _amount);\r\n\r\n        User_Map[msg.sender].last_totoken_ratio = (block.timestamp - User_Map[msg.sender].last_Stake_Time) * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000)  ;\r\n        User_Map[msg.sender].stakeNumber += _amount;\r\n        User_Map[msg.sender].last_Stake_Time = block.timestamp;\r\n        stakeSupple += _amount;\r\n        User_Map[msg.sender].last_totoken_Time = User_Map[msg.sender].last_Stake_Time;\r\n        return true;  \r\n\r\n    }\r\n\r\n    function withDraw () public returns (bool) {\r\n        IERC20(staketoken).transfer(msg.sender, User_Map[msg.sender].stakeNumber); \r\n\r\n        emit transfer(msg.sender, User_Map[msg.sender].stakeNumber);\r\n            \r\n        stakeSupple -= User_Map[msg.sender].stakeNumber;\r\n        User_Map[msg.sender].stakeNumber = 0;\r\n\r\n        return true;\r\n    }\r\n\r\n    function harvest() public returns (bool) {\r\n        User_Map[msg.sender].whole_ratio = User_Map[msg.sender].last_totoken_ratio + (block.timestamp - User_Map[msg.sender].last_Stake_Time) * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000);\r\n        IERC20(totoken).transfer(msg.sender, User_Map[msg.sender].whole_ratio); \r\n\r\n        emit transfer(msg.sender, User_Map[msg.sender].whole_ratio);\r\n\r\n        User_Map[msg.sender].whole_ratio = 0;\r\n        User_Map[msg.sender].last_totoken_ratio = 0;\r\n        User_Map[msg.sender].last_totoken_Time = block.timestamp;\r\n        return true;\r\n    }\r\n    \r\n    // function withDrawtwo (uint _amount) public returns (bool) {\r\n    //     require(_amount <= User_Map[msg.sender].stakeNumber, \"buzu\");\r\n    //     IERC20(staketoken).transfer(msg.sender, _amount); \r\n    //     User_Map[msg.sender].stakeNumber -= _amount;\r\n    //     stakeSupple -= _amount;\r\n    //     return true;\r\n    // }\r\n\r\n\r\n    function newTotokenRatio() public view returns (uint) {\r\n        uint newtime = block.timestamp - User_Map[msg.sender].last_totoken_Time;\r\n        uint newTotokenRatione = newtime * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000);\r\n        return newTotokenRatione;  \r\n    }\r\n\r\n    function lastTotokenRatio()public view returns(uint) {\r\n        uint _lastTotokenRatio = User_Map[msg.sender].last_totoken_ratio;\r\n        return _lastTotokenRatio;\r\n    }\r\n\r\n\r\n    // function harvestwithDraw() public returns (bool) {\r\n    //     User_Map[msg.sender].whole_ratio = User_Map[msg.sender].last_totoken_ratio + (block.timestamp - User_Map[msg.sender].last_Stake_Time) * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000);\r\n    //     IERC20(totoken).transfer(msg.sender, User_Map[msg.sender].whole_ratio); \r\n\r\n    //     emit transfer(msg.sender, User_Map[msg.sender].whole_ratio);\r\n\r\n    //     User_Map[msg.sender].whole_ratio = 0;\r\n    //     User_Map[msg.sender].last_totoken_ratio = 0;\r\n\r\n    //     IERC20(staketoken).transfer(msg.sender, User_Map[msg.sender].stakeNumber); \r\n\r\n    //     emit transfer(msg.sender, User_Map[msg.sender].stakeNumber);\r\n\r\n    //     User_Map[msg.sender].stakeNumber = 0;\r\n    //     stakeSupple -= User_Map[msg.sender].stakeNumber;\r\n    //     return true;\r\n    // }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/自己写个矿池,定息矿池.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "Approveal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "Trasfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"Approveal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"Trasfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/\\u81ea\\u5df1\\u5199\\u4e2a\\u77ff\\u6c60,\\u5b9a\\u606f\\u77ff\\u6c60.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/\\u81ea\\u5df1\\u5199\\u4e2a\\u77ff\\u6c60,\\u5b9a\\u606f\\u77ff\\u6c60.sol\":{\"keccak256\":\"0xcd04dd756790d24748bc2db0349e28df15b4caaa6540d0c4dccf42487bb15693\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32f35b8fec53e7646445d3fbdebe71ec5892063711973928c53e2e130d4b7291\",\"dweb:/ipfs/QmaB849Wa28RcmLWJshjmtYNBKvL8DvU1xfXwqjQeFCcZX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"StakeContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_staketoken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_totoken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "Approveal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "Trasfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amout",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "Stake",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "User_Map",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "stakeNumber",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "last_Stake_Time",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "last_totoken_ratio",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "whole_ratio",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "last_totoken_Time",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "harvest",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastTotokenRatio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "newTotokenRatio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ratio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_ratio",
									"type": "uint256"
								}
							],
							"name": "setRatio",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakeSupple",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "staketoken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totoken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withDraw",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":732:5316  contract StakeContract {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1381:1719  constructor (address _staketoken, address _totoken) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1452:1462  msg.sender */\n  caller\n    /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1444:1449  owner */\n  0x04\n  0x00\n    /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1444:1462  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1504:1505  0 */\n  0x00\n    /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1481:1506  _staketoken != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1481:1492  _staketoken */\n  dup3\n    /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1481:1506  _staketoken != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1473:1526  require(_staketoken != address(0),\"NOT,S 0X ADDRESS\") */\n  tag_6\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_7\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_6:\n    /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1565:1566  0 */\n  0x00\n    /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1545:1567  _totoken != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1545:1553  _totoken */\n  dup2\n    /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1545:1567  _totoken != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1537:1587  require(_totoken != address(0),\"NOT,S 0X ADDRESS\") */\n  tag_9\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_10\n  swap1\n  tag_8\n  jump\t// in\ntag_10:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_9:\n    /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1621:1629  _totoken */\n  dup1\n    /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1606:1629  _staketoken == _totoken */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1606:1617  _staketoken */\n  dup3\n    /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1606:1629  _staketoken == _totoken */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1598:1647  require(_staketoken == _totoken,\"NEED agreement\") */\n  tag_11\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_12\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_11:\n    /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1671:1682  _staketoken */\n  dup2\n    /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1658:1668  staketoken */\n  0x01\n  0x00\n    /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1658:1682  staketoken = _staketoken */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1703:1711  _totoken */\n  dup1\n    /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1693:1700  totoken */\n  0x02\n  0x00\n    /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1693:1711  totoken = _totoken */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1381:1719  constructor (address _staketoken, address _totoken) {... */\n  pop\n  pop\n    /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":732:5316  contract StakeContract {... */\n  jump(tag_14)\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_33\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_35\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_36:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_38\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_41\n  tag_16\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":949:1068   */\ntag_40:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_42\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_21\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_43\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_21\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1527   */\ntag_22:\n    /* \"#utility.yul\":1442:1453   */\n  0x00\n    /* \"#utility.yul\":1476:1482   */\n  dup3\n    /* \"#utility.yul\":1471:1474   */\n  dup3\n    /* \"#utility.yul\":1464:1483   */\n  mstore\n    /* \"#utility.yul\":1516:1520   */\n  0x20\n    /* \"#utility.yul\":1511:1514   */\n  dup3\n    /* \"#utility.yul\":1507:1521   */\n  add\n    /* \"#utility.yul\":1492:1521   */\n  swap1\n  pop\n    /* \"#utility.yul\":1358:1527   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1533:1699   */\ntag_23:\n    /* \"#utility.yul\":1673:1691   */\n  0x4e4f542c53203058204144445245535300000000000000000000000000000000\n    /* \"#utility.yul\":1669:1670   */\n  0x00\n    /* \"#utility.yul\":1661:1667   */\n  dup3\n    /* \"#utility.yul\":1657:1671   */\n  add\n    /* \"#utility.yul\":1650:1692   */\n  mstore\n    /* \"#utility.yul\":1533:1699   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1705:2071   */\ntag_24:\n    /* \"#utility.yul\":1847:1850   */\n  0x00\n    /* \"#utility.yul\":1868:1935   */\n  tag_47\n    /* \"#utility.yul\":1932:1934   */\n  0x10\n    /* \"#utility.yul\":1927:1930   */\n  dup4\n    /* \"#utility.yul\":1868:1935   */\n  tag_22\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1861:1935   */\n  swap2\n  pop\n    /* \"#utility.yul\":1944:2037   */\n  tag_48\n    /* \"#utility.yul\":2033:2036   */\n  dup3\n    /* \"#utility.yul\":1944:2037   */\n  tag_23\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":2062:2064   */\n  0x20\n    /* \"#utility.yul\":2057:2060   */\n  dup3\n    /* \"#utility.yul\":2053:2065   */\n  add\n    /* \"#utility.yul\":2046:2065   */\n  swap1\n  pop\n    /* \"#utility.yul\":1705:2071   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2077:2496   */\ntag_8:\n    /* \"#utility.yul\":2243:2247   */\n  0x00\n    /* \"#utility.yul\":2281:2283   */\n  0x20\n    /* \"#utility.yul\":2270:2279   */\n  dup3\n    /* \"#utility.yul\":2266:2284   */\n  add\n    /* \"#utility.yul\":2258:2284   */\n  swap1\n  pop\n    /* \"#utility.yul\":2330:2339   */\n  dup2\n    /* \"#utility.yul\":2324:2328   */\n  dup2\n    /* \"#utility.yul\":2320:2340   */\n  sub\n    /* \"#utility.yul\":2316:2317   */\n  0x00\n    /* \"#utility.yul\":2305:2314   */\n  dup4\n    /* \"#utility.yul\":2301:2318   */\n  add\n    /* \"#utility.yul\":2294:2341   */\n  mstore\n    /* \"#utility.yul\":2358:2489   */\n  tag_50\n    /* \"#utility.yul\":2484:2488   */\n  dup2\n    /* \"#utility.yul\":2358:2489   */\n  tag_24\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":2350:2489   */\n  swap1\n  pop\n    /* \"#utility.yul\":2077:2496   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2502:2666   */\ntag_25:\n    /* \"#utility.yul\":2642:2658   */\n  0x4e4545442061677265656d656e74000000000000000000000000000000000000\n    /* \"#utility.yul\":2638:2639   */\n  0x00\n    /* \"#utility.yul\":2630:2636   */\n  dup3\n    /* \"#utility.yul\":2626:2640   */\n  add\n    /* \"#utility.yul\":2619:2659   */\n  mstore\n    /* \"#utility.yul\":2502:2666   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2672:3038   */\ntag_26:\n    /* \"#utility.yul\":2814:2817   */\n  0x00\n    /* \"#utility.yul\":2835:2902   */\n  tag_53\n    /* \"#utility.yul\":2899:2901   */\n  0x0e\n    /* \"#utility.yul\":2894:2897   */\n  dup4\n    /* \"#utility.yul\":2835:2902   */\n  tag_22\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":2828:2902   */\n  swap2\n  pop\n    /* \"#utility.yul\":2911:3004   */\n  tag_54\n    /* \"#utility.yul\":3000:3003   */\n  dup3\n    /* \"#utility.yul\":2911:3004   */\n  tag_25\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":3029:3031   */\n  0x20\n    /* \"#utility.yul\":3024:3027   */\n  dup3\n    /* \"#utility.yul\":3020:3032   */\n  add\n    /* \"#utility.yul\":3013:3032   */\n  swap1\n  pop\n    /* \"#utility.yul\":2672:3038   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3044:3463   */\ntag_13:\n    /* \"#utility.yul\":3210:3214   */\n  0x00\n    /* \"#utility.yul\":3248:3250   */\n  0x20\n    /* \"#utility.yul\":3237:3246   */\n  dup3\n    /* \"#utility.yul\":3233:3251   */\n  add\n    /* \"#utility.yul\":3225:3251   */\n  swap1\n  pop\n    /* \"#utility.yul\":3297:3306   */\n  dup2\n    /* \"#utility.yul\":3291:3295   */\n  dup2\n    /* \"#utility.yul\":3287:3307   */\n  sub\n    /* \"#utility.yul\":3283:3284   */\n  0x00\n    /* \"#utility.yul\":3272:3281   */\n  dup4\n    /* \"#utility.yul\":3268:3285   */\n  add\n    /* \"#utility.yul\":3261:3308   */\n  mstore\n    /* \"#utility.yul\":3325:3456   */\n  tag_56\n    /* \"#utility.yul\":3451:3455   */\n  dup2\n    /* \"#utility.yul\":3325:3456   */\n  tag_26\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":3317:3456   */\n  swap1\n  pop\n    /* \"#utility.yul\":3044:3463   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":732:5316  contract StakeContract {... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":732:5316  contract StakeContract {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x71ca337d\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x71ca337d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8c93ecff\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xb2237ba3\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xd942727f\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xdab2997b\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x0fdb1c10\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x227a473b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2c46502d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x4641257d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x529aca49\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x5e9f4435\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2682:3033  function withDraw () public returns (bool) {... */\n    tag_3:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2032:2674  function Stake(uint _amount) public returns (bool){... */\n    tag_4:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":849:871  address public totoken */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3041:3643  function harvest() public returns (bool) {... */\n    tag_6:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3992:4279  function newTotokenRatio() public view returns (uint) {... */\n    tag_7:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4287:4458  function lastTotokenRatio()public view returns(uint) {... */\n    tag_8:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":793:810  uint public ratio */\n    tag_9:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1332:1372  mapping(address => User) public User_Map */\n    tag_10:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":908:928  address public owner */\n    tag_11:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1932:2024  function setRatio(uint _ratio) external onlyOwner {    ... */\n    tag_12:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      stop\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":878:901  uint public stakeSupple */\n    tag_13:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":817:842  address public staketoken */\n    tag_14:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2682:3033  function withDraw () public returns (bool) {... */\n    tag_17:\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2719:2723  bool */\n      0x00\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2743:2753  staketoken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2736:2763  IERC20(staketoken).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2764:2774  msg.sender */\n      caller\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2776:2784  User_Map */\n      0x05\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2776:2796  User_Map[msg.sender] */\n      0x00\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2785:2795  msg.sender */\n      caller\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2776:2796  User_Map[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2776:2808  User_Map[msg.sender].stakeNumber */\n      0x00\n      add\n      sload\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2736:2809  IERC20(staketoken).transfer(msg.sender, User_Map[msg.sender].stakeNumber) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_61\n      swap3\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_64\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_64:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      pop\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2837:2847  msg.sender */\n      caller\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2828:2882  transfer(msg.sender, User_Map[msg.sender].stakeNumber) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2849:2857  User_Map */\n      0x05\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2849:2869  User_Map[msg.sender] */\n      0x00\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2858:2868  msg.sender */\n      caller\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2849:2869  User_Map[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2849:2881  User_Map[msg.sender].stakeNumber */\n      0x00\n      add\n      sload\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2828:2882  transfer(msg.sender, User_Map[msg.sender].stakeNumber) */\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2922:2930  User_Map */\n      0x05\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2922:2942  User_Map[msg.sender] */\n      0x00\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2931:2941  msg.sender */\n      caller\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2922:2942  User_Map[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2922:2954  User_Map[msg.sender].stakeNumber */\n      0x00\n      add\n      sload\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2907:2918  stakeSupple */\n      0x03\n      0x00\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2907:2954  stakeSupple -= User_Map[msg.sender].stakeNumber */\n      dup3\n      dup3\n      sload\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3000:3001  0 */\n      0x00\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2965:2973  User_Map */\n      0x05\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2965:2985  User_Map[msg.sender] */\n      0x00\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2974:2984  msg.sender */\n      caller\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2965:2985  User_Map[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2965:2997  User_Map[msg.sender].stakeNumber */\n      0x00\n      add\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2965:3001  User_Map[msg.sender].stakeNumber = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3021:3025  true */\n      0x01\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3014:3025  return true */\n      swap1\n      pop\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2682:3033  function withDraw () public returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2032:2674  function Stake(uint _amount) public returns (bool){... */\n    tag_23:\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2077:2081  bool */\n      0x00\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2102:2112  staketoken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2095:2126  IERC20(staketoken).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2127:2137  msg.sender */\n      caller\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2147:2151  this */\n      address\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2154:2161  _amount */\n      dup6\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2095:2162  IERC20(staketoken).transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_71\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_74\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_74:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_75:\n      pop\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2209:2213  this */\n      address\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2181:2224  Trasfer(msg.sender, address(this), _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2189:2199  msg.sender */\n      caller\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2181:2224  Trasfer(msg.sender, address(this), _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1fd6ebb971d137acf3f01670862b8a96758cfc7e39dccb093e68daf461b0262c\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2216:2223  _amount */\n      dup5\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2181:2224  Trasfer(msg.sender, address(this), _amount) */\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2389:2397  31536000 */\n      0x01e13380\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2382:2385  100 */\n      0x64\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2375:2380  ratio */\n      sload(0x00)\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2340:2348  User_Map */\n      0x05\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2340:2360  User_Map[msg.sender] */\n      0x00\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2349:2359  msg.sender */\n      caller\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2340:2360  User_Map[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2340:2372  User_Map[msg.sender].stakeNumber */\n      0x00\n      add\n      sload\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2340:2380  User_Map[msg.sender].stakeNumber * ratio */\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2340:2385  User_Map[msg.sender].stakeNumber * ratio /100 */\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2339:2397  (User_Map[msg.sender].stakeNumber * ratio /100) / 31536000 */\n      tag_81\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_81:\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2298:2306  User_Map */\n      0x05\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2298:2318  User_Map[msg.sender] */\n      0x00\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2307:2317  msg.sender */\n      caller\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2298:2318  User_Map[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2298:2334  User_Map[msg.sender].last_Stake_Time */\n      0x01\n      add\n      sload\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2280:2295  block.timestamp */\n      timestamp\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2280:2334  block.timestamp - User_Map[msg.sender].last_Stake_Time */\n      tag_82\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_82:\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2279:2398  (block.timestamp - User_Map[msg.sender].last_Stake_Time) * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000) */\n      tag_83\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_83:\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2237:2245  User_Map */\n      0x05\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2237:2257  User_Map[msg.sender] */\n      0x00\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2246:2256  msg.sender */\n      caller\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2237:2257  User_Map[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2237:2276  User_Map[msg.sender].last_totoken_ratio */\n      0x02\n      add\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2237:2398  User_Map[msg.sender].last_totoken_ratio = (block.timestamp - User_Map[msg.sender].last_Stake_Time) * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2447:2454  _amount */\n      dup2\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2411:2419  User_Map */\n      0x05\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2411:2431  User_Map[msg.sender] */\n      0x00\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2420:2430  msg.sender */\n      caller\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2411:2431  User_Map[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2411:2443  User_Map[msg.sender].stakeNumber */\n      0x00\n      add\n      0x00\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2411:2454  User_Map[msg.sender].stakeNumber += _amount */\n      dup3\n      dup3\n      sload\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2504:2519  block.timestamp */\n      timestamp\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2465:2473  User_Map */\n      0x05\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2465:2485  User_Map[msg.sender] */\n      0x00\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2474:2484  msg.sender */\n      caller\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2465:2485  User_Map[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2465:2501  User_Map[msg.sender].last_Stake_Time */\n      0x01\n      add\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2465:2519  User_Map[msg.sender].last_Stake_Time = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2545:2552  _amount */\n      dup2\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2530:2541  stakeSupple */\n      0x03\n      0x00\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2530:2552  stakeSupple += _amount */\n      dup3\n      dup3\n      sload\n      tag_86\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_86:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2604:2612  User_Map */\n      0x05\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2604:2624  User_Map[msg.sender] */\n      0x00\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2613:2623  msg.sender */\n      caller\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2604:2624  User_Map[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2604:2640  User_Map[msg.sender].last_Stake_Time */\n      0x01\n      add\n      sload\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2563:2571  User_Map */\n      0x05\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2563:2583  User_Map[msg.sender] */\n      0x00\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2572:2582  msg.sender */\n      caller\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2563:2583  User_Map[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2563:2601  User_Map[msg.sender].last_totoken_Time */\n      0x04\n      add\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2563:2640  User_Map[msg.sender].last_totoken_Time = User_Map[msg.sender].last_Stake_Time */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2658:2662  true */\n      0x01\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2651:2662  return true */\n      swap1\n      pop\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2032:2674  function Stake(uint _amount) public returns (bool){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":849:871  address public totoken */\n    tag_26:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3041:3643  function harvest() public returns (bool) {... */\n    tag_30:\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3076:3080  bool */\n      0x00\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3280:3288  31536000 */\n      0x01e13380\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3273:3276  100 */\n      0x64\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3266:3271  ratio */\n      sload(0x00)\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3231:3239  User_Map */\n      0x05\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3231:3251  User_Map[msg.sender] */\n      0x00\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3240:3250  msg.sender */\n      caller\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3231:3251  User_Map[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3231:3263  User_Map[msg.sender].stakeNumber */\n      0x00\n      add\n      sload\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3231:3271  User_Map[msg.sender].stakeNumber * ratio */\n      tag_88\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_88:\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3231:3276  User_Map[msg.sender].stakeNumber * ratio /100 */\n      tag_89\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_89:\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3230:3288  (User_Map[msg.sender].stakeNumber * ratio /100) / 31536000 */\n      tag_90\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_90:\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3189:3197  User_Map */\n      0x05\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3189:3209  User_Map[msg.sender] */\n      0x00\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3198:3208  msg.sender */\n      caller\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3189:3209  User_Map[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3189:3225  User_Map[msg.sender].last_Stake_Time */\n      0x01\n      add\n      sload\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3171:3186  block.timestamp */\n      timestamp\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3171:3225  block.timestamp - User_Map[msg.sender].last_Stake_Time */\n      tag_91\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_91:\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3170:3289  (block.timestamp - User_Map[msg.sender].last_Stake_Time) * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000) */\n      tag_92\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_92:\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3128:3136  User_Map */\n      0x05\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3128:3148  User_Map[msg.sender] */\n      0x00\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3137:3147  msg.sender */\n      caller\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3128:3148  User_Map[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3128:3167  User_Map[msg.sender].last_totoken_ratio */\n      0x02\n      add\n      sload\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3128:3289  User_Map[msg.sender].last_totoken_ratio + (block.timestamp - User_Map[msg.sender].last_Stake_Time) * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000) */\n      tag_93\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_93:\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3093:3101  User_Map */\n      0x05\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3093:3113  User_Map[msg.sender] */\n      0x00\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3102:3112  msg.sender */\n      caller\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3093:3113  User_Map[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3093:3125  User_Map[msg.sender].whole_ratio */\n      0x03\n      add\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3093:3289  User_Map[msg.sender].whole_ratio = User_Map[msg.sender].last_totoken_ratio + (block.timestamp - User_Map[msg.sender].last_Stake_Time) * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3307:3314  totoken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3300:3324  IERC20(totoken).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3325:3335  msg.sender */\n      caller\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3337:3345  User_Map */\n      0x05\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3337:3357  User_Map[msg.sender] */\n      0x00\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3346:3356  msg.sender */\n      caller\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3337:3357  User_Map[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3337:3369  User_Map[msg.sender].whole_ratio */\n      0x03\n      add\n      sload\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3300:3370  IERC20(totoken).transfer(msg.sender, User_Map[msg.sender].whole_ratio) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap3\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_94:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_96\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_97:\n      pop\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3398:3408  msg.sender */\n      caller\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3389:3443  transfer(msg.sender, User_Map[msg.sender].whole_ratio) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3410:3418  User_Map */\n      0x05\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3410:3430  User_Map[msg.sender] */\n      0x00\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3419:3429  msg.sender */\n      caller\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3410:3430  User_Map[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3410:3442  User_Map[msg.sender].whole_ratio */\n      0x03\n      add\n      sload\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3389:3443  transfer(msg.sender, User_Map[msg.sender].whole_ratio) */\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3491:3492  0 */\n      0x00\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3456:3464  User_Map */\n      0x05\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3456:3476  User_Map[msg.sender] */\n      0x00\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3465:3475  msg.sender */\n      caller\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3456:3476  User_Map[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3456:3488  User_Map[msg.sender].whole_ratio */\n      0x03\n      add\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3456:3492  User_Map[msg.sender].whole_ratio = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3545:3546  0 */\n      0x00\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3503:3511  User_Map */\n      0x05\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3503:3523  User_Map[msg.sender] */\n      0x00\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3512:3522  msg.sender */\n      caller\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3503:3523  User_Map[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3503:3542  User_Map[msg.sender].last_totoken_ratio */\n      0x02\n      add\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3503:3546  User_Map[msg.sender].last_totoken_ratio = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3598:3613  block.timestamp */\n      timestamp\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3557:3565  User_Map */\n      0x05\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3557:3577  User_Map[msg.sender] */\n      0x00\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3566:3576  msg.sender */\n      caller\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3557:3577  User_Map[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3557:3595  User_Map[msg.sender].last_totoken_Time */\n      0x04\n      add\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3557:3613  User_Map[msg.sender].last_totoken_Time = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3631:3635  true */\n      0x01\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3624:3635  return true */\n      swap1\n      pop\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3041:3643  function harvest() public returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3992:4279  function newTotokenRatio() public view returns (uint) {... */\n    tag_33:\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4040:4044  uint */\n      0x00\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4057:4069  uint newtime */\n      dup1\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4090:4098  User_Map */\n      0x05\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4090:4110  User_Map[msg.sender] */\n      0x00\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4099:4109  msg.sender */\n      caller\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4090:4110  User_Map[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4090:4128  User_Map[msg.sender].last_totoken_Time */\n      0x04\n      add\n      sload\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4072:4087  block.timestamp */\n      timestamp\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4072:4128  block.timestamp - User_Map[msg.sender].last_totoken_Time */\n      tag_100\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_100:\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4057:4128  uint newtime = block.timestamp - User_Map[msg.sender].last_totoken_Time */\n      swap1\n      pop\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4139:4161  uint newTotokenRatione */\n      0x00\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4225:4233  31536000 */\n      0x01e13380\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4218:4221  100 */\n      0x64\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4211:4216  ratio */\n      sload(0x00)\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4176:4184  User_Map */\n      0x05\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4176:4196  User_Map[msg.sender] */\n      0x00\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4185:4195  msg.sender */\n      caller\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4176:4196  User_Map[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4176:4208  User_Map[msg.sender].stakeNumber */\n      0x00\n      add\n      sload\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4176:4216  User_Map[msg.sender].stakeNumber * ratio */\n      tag_101\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_101:\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4176:4221  User_Map[msg.sender].stakeNumber * ratio /100 */\n      tag_102\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_102:\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4175:4233  (User_Map[msg.sender].stakeNumber * ratio /100) / 31536000 */\n      tag_103\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_103:\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4164:4171  newtime */\n      dup3\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4164:4234  newtime * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000) */\n      tag_104\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_104:\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4139:4234  uint newTotokenRatione = newtime * ((User_Map[msg.sender].stakeNumber * ratio /100) / 31536000) */\n      swap1\n      pop\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4252:4269  newTotokenRatione */\n      dup1\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4245:4269  return newTotokenRatione */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":3992:4279  function newTotokenRatio() public view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4287:4458  function lastTotokenRatio()public view returns(uint) {... */\n    tag_37:\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4334:4338  uint */\n      0x00\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4351:4373  uint _lastTotokenRatio */\n      dup1\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4376:4384  User_Map */\n      0x05\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4376:4396  User_Map[msg.sender] */\n      0x00\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4385:4395  msg.sender */\n      caller\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4376:4396  User_Map[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4376:4415  User_Map[msg.sender].last_totoken_ratio */\n      0x02\n      add\n      sload\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4351:4415  uint _lastTotokenRatio = User_Map[msg.sender].last_totoken_ratio */\n      swap1\n      pop\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4433:4450  _lastTotokenRatio */\n      dup1\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4426:4450  return _lastTotokenRatio */\n      swap2\n      pop\n      pop\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":4287:4458  function lastTotokenRatio()public view returns(uint) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":793:810  uint public ratio */\n    tag_40:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1332:1372  mapping(address => User) public User_Map */\n    tag_45:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":908:928  address public owner */\n    tag_49:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1932:2024  function setRatio(uint _ratio) external onlyOwner {    ... */\n    tag_53:\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1781:1786  owner */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1767:1786  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1767:1777  msg.sender */\n      caller\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1767:1786  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1759:1801  require(msg.sender == owner , \"not owner\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":2005:2011  _ratio */\n      dup1\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1997:2002  ratio */\n      0x00\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1997:2011  ratio = _ratio */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":1932:2024  function setRatio(uint _ratio) external onlyOwner {    ... */\n      pop\n      jump\t// out\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":878:901  uint public stakeSupple */\n    tag_55:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/\\xe8\\x87\\xaa\\xe5\\xb7\\xb1\\xe5\\x86\\x99\\xe4\\xb8\\xaa\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0,\\xe5\\xae\\x9a\\xe6\\x81\\xaf\\xe7\\x9f\\xbf\\xe6\\xb1\\xa0.sol\":817:842  address public staketoken */\n    tag_58:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:97   */\n    tag_111:\n        /* \"#utility.yul\":41:48   */\n      0x00\n        /* \"#utility.yul\":84:89   */\n      dup2\n        /* \"#utility.yul\":77:90   */\n      iszero\n        /* \"#utility.yul\":70:91   */\n      iszero\n        /* \"#utility.yul\":59:91   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:97   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":103:212   */\n    tag_112:\n        /* \"#utility.yul\":184:205   */\n      tag_135\n        /* \"#utility.yul\":199:204   */\n      dup2\n        /* \"#utility.yul\":184:205   */\n      tag_111\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":179:182   */\n      dup3\n        /* \"#utility.yul\":172:206   */\n      mstore\n        /* \"#utility.yul\":103:212   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":218:428   */\n    tag_19:\n        /* \"#utility.yul\":305:309   */\n      0x00\n        /* \"#utility.yul\":343:345   */\n      0x20\n        /* \"#utility.yul\":332:341   */\n      dup3\n        /* \"#utility.yul\":328:346   */\n      add\n        /* \"#utility.yul\":320:346   */\n      swap1\n      pop\n        /* \"#utility.yul\":356:421   */\n      tag_137\n        /* \"#utility.yul\":418:419   */\n      0x00\n        /* \"#utility.yul\":407:416   */\n      dup4\n        /* \"#utility.yul\":403:420   */\n      add\n        /* \"#utility.yul\":394:400   */\n      dup5\n        /* \"#utility.yul\":356:421   */\n      tag_112\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":218:428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":515:632   */\n    tag_114:\n        /* \"#utility.yul\":624:625   */\n      0x00\n        /* \"#utility.yul\":621:622   */\n      dup1\n        /* \"#utility.yul\":614:626   */\n      revert\n        /* \"#utility.yul\":761:838   */\n    tag_116:\n        /* \"#utility.yul\":798:805   */\n      0x00\n        /* \"#utility.yul\":827:832   */\n      dup2\n        /* \"#utility.yul\":816:832   */\n      swap1\n      pop\n        /* \"#utility.yul\":761:838   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":844:966   */\n    tag_117:\n        /* \"#utility.yul\":917:941   */\n      tag_143\n        /* \"#utility.yul\":935:940   */\n      dup2\n        /* \"#utility.yul\":917:941   */\n      tag_116\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":910:915   */\n      dup2\n        /* \"#utility.yul\":907:942   */\n      eq\n        /* \"#utility.yul\":897:960   */\n      tag_144\n      jumpi\n        /* \"#utility.yul\":956:957   */\n      0x00\n        /* \"#utility.yul\":953:954   */\n      dup1\n        /* \"#utility.yul\":946:958   */\n      revert\n        /* \"#utility.yul\":897:960   */\n    tag_144:\n        /* \"#utility.yul\":844:966   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":972:1111   */\n    tag_118:\n        /* \"#utility.yul\":1018:1023   */\n      0x00\n        /* \"#utility.yul\":1056:1062   */\n      dup2\n        /* \"#utility.yul\":1043:1063   */\n      calldataload\n        /* \"#utility.yul\":1034:1063   */\n      swap1\n      pop\n        /* \"#utility.yul\":1072:1105   */\n      tag_146\n        /* \"#utility.yul\":1099:1104   */\n      dup2\n        /* \"#utility.yul\":1072:1105   */\n      tag_117\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":972:1111   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1117:1446   */\n    tag_22:\n        /* \"#utility.yul\":1176:1182   */\n      0x00\n        /* \"#utility.yul\":1225:1227   */\n      0x20\n        /* \"#utility.yul\":1213:1222   */\n      dup3\n        /* \"#utility.yul\":1204:1211   */\n      dup5\n        /* \"#utility.yul\":1200:1223   */\n      sub\n        /* \"#utility.yul\":1196:1228   */\n      slt\n        /* \"#utility.yul\":1193:1312   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":1231:1310   */\n      tag_149\n      tag_114\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":1193:1312   */\n    tag_148:\n        /* \"#utility.yul\":1351:1352   */\n      0x00\n        /* \"#utility.yul\":1376:1429   */\n      tag_150\n        /* \"#utility.yul\":1421:1428   */\n      dup5\n        /* \"#utility.yul\":1412:1418   */\n      dup3\n        /* \"#utility.yul\":1401:1410   */\n      dup6\n        /* \"#utility.yul\":1397:1419   */\n      add\n        /* \"#utility.yul\":1376:1429   */\n      tag_118\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":1366:1429   */\n      swap2\n      pop\n        /* \"#utility.yul\":1322:1439   */\n      pop\n        /* \"#utility.yul\":1117:1446   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1452:1578   */\n    tag_119:\n        /* \"#utility.yul\":1489:1496   */\n      0x00\n        /* \"#utility.yul\":1529:1571   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1522:1527   */\n      dup3\n        /* \"#utility.yul\":1518:1572   */\n      and\n        /* \"#utility.yul\":1507:1572   */\n      swap1\n      pop\n        /* \"#utility.yul\":1452:1578   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1584:1680   */\n    tag_120:\n        /* \"#utility.yul\":1621:1628   */\n      0x00\n        /* \"#utility.yul\":1650:1674   */\n      tag_153\n        /* \"#utility.yul\":1668:1673   */\n      dup3\n        /* \"#utility.yul\":1650:1674   */\n      tag_119\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":1639:1674   */\n      swap1\n      pop\n        /* \"#utility.yul\":1584:1680   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1686:1804   */\n    tag_121:\n        /* \"#utility.yul\":1773:1797   */\n      tag_155\n        /* \"#utility.yul\":1791:1796   */\n      dup2\n        /* \"#utility.yul\":1773:1797   */\n      tag_120\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1768:1771   */\n      dup3\n        /* \"#utility.yul\":1761:1798   */\n      mstore\n        /* \"#utility.yul\":1686:1804   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1810:2032   */\n    tag_28:\n        /* \"#utility.yul\":1903:1907   */\n      0x00\n        /* \"#utility.yul\":1941:1943   */\n      0x20\n        /* \"#utility.yul\":1930:1939   */\n      dup3\n        /* \"#utility.yul\":1926:1944   */\n      add\n        /* \"#utility.yul\":1918:1944   */\n      swap1\n      pop\n        /* \"#utility.yul\":1954:2025   */\n      tag_157\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2011:2020   */\n      dup4\n        /* \"#utility.yul\":2007:2024   */\n      add\n        /* \"#utility.yul\":1998:2004   */\n      dup5\n        /* \"#utility.yul\":1954:2025   */\n      tag_121\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1810:2032   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2156   */\n    tag_122:\n        /* \"#utility.yul\":2125:2149   */\n      tag_159\n        /* \"#utility.yul\":2143:2148   */\n      dup2\n        /* \"#utility.yul\":2125:2149   */\n      tag_116\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":2120:2123   */\n      dup3\n        /* \"#utility.yul\":2113:2150   */\n      mstore\n        /* \"#utility.yul\":2038:2156   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2162:2384   */\n    tag_35:\n        /* \"#utility.yul\":2255:2259   */\n      0x00\n        /* \"#utility.yul\":2293:2295   */\n      0x20\n        /* \"#utility.yul\":2282:2291   */\n      dup3\n        /* \"#utility.yul\":2278:2296   */\n      add\n        /* \"#utility.yul\":2270:2296   */\n      swap1\n      pop\n        /* \"#utility.yul\":2306:2377   */\n      tag_161\n        /* \"#utility.yul\":2374:2375   */\n      0x00\n        /* \"#utility.yul\":2363:2372   */\n      dup4\n        /* \"#utility.yul\":2359:2376   */\n      add\n        /* \"#utility.yul\":2350:2356   */\n      dup5\n        /* \"#utility.yul\":2306:2377   */\n      tag_122\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2162:2384   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2390:2512   */\n    tag_123:\n        /* \"#utility.yul\":2463:2487   */\n      tag_163\n        /* \"#utility.yul\":2481:2486   */\n      dup2\n        /* \"#utility.yul\":2463:2487   */\n      tag_120\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2456:2461   */\n      dup2\n        /* \"#utility.yul\":2453:2488   */\n      eq\n        /* \"#utility.yul\":2443:2506   */\n      tag_164\n      jumpi\n        /* \"#utility.yul\":2502:2503   */\n      0x00\n        /* \"#utility.yul\":2499:2500   */\n      dup1\n        /* \"#utility.yul\":2492:2504   */\n      revert\n        /* \"#utility.yul\":2443:2506   */\n    tag_164:\n        /* \"#utility.yul\":2390:2512   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2518:2657   */\n    tag_124:\n        /* \"#utility.yul\":2564:2569   */\n      0x00\n        /* \"#utility.yul\":2602:2608   */\n      dup2\n        /* \"#utility.yul\":2589:2609   */\n      calldataload\n        /* \"#utility.yul\":2580:2609   */\n      swap1\n      pop\n        /* \"#utility.yul\":2618:2651   */\n      tag_166\n        /* \"#utility.yul\":2645:2650   */\n      dup2\n        /* \"#utility.yul\":2618:2651   */\n      tag_123\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":2518:2657   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2663:2992   */\n    tag_44:\n        /* \"#utility.yul\":2722:2728   */\n      0x00\n        /* \"#utility.yul\":2771:2773   */\n      0x20\n        /* \"#utility.yul\":2759:2768   */\n      dup3\n        /* \"#utility.yul\":2750:2757   */\n      dup5\n        /* \"#utility.yul\":2746:2769   */\n      sub\n        /* \"#utility.yul\":2742:2774   */\n      slt\n        /* \"#utility.yul\":2739:2858   */\n      iszero\n      tag_168\n      jumpi\n        /* \"#utility.yul\":2777:2856   */\n      tag_169\n      tag_114\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":2739:2858   */\n    tag_168:\n        /* \"#utility.yul\":2897:2898   */\n      0x00\n        /* \"#utility.yul\":2922:2975   */\n      tag_170\n        /* \"#utility.yul\":2967:2974   */\n      dup5\n        /* \"#utility.yul\":2958:2964   */\n      dup3\n        /* \"#utility.yul\":2947:2956   */\n      dup6\n        /* \"#utility.yul\":2943:2965   */\n      add\n        /* \"#utility.yul\":2922:2975   */\n      tag_124\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":2912:2975   */\n      swap2\n      pop\n        /* \"#utility.yul\":2868:2985   */\n      pop\n        /* \"#utility.yul\":2663:2992   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2998:3662   */\n    tag_47:\n        /* \"#utility.yul\":3203:3207   */\n      0x00\n        /* \"#utility.yul\":3241:3244   */\n      0xa0\n        /* \"#utility.yul\":3230:3239   */\n      dup3\n        /* \"#utility.yul\":3226:3245   */\n      add\n        /* \"#utility.yul\":3218:3245   */\n      swap1\n      pop\n        /* \"#utility.yul\":3255:3326   */\n      tag_172\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup9\n        /* \"#utility.yul\":3255:3326   */\n      tag_122\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":3336:3408   */\n      tag_173\n        /* \"#utility.yul\":3404:3406   */\n      0x20\n        /* \"#utility.yul\":3393:3402   */\n      dup4\n        /* \"#utility.yul\":3389:3407   */\n      add\n        /* \"#utility.yul\":3380:3386   */\n      dup8\n        /* \"#utility.yul\":3336:3408   */\n      tag_122\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":3418:3490   */\n      tag_174\n        /* \"#utility.yul\":3486:3488   */\n      0x40\n        /* \"#utility.yul\":3475:3484   */\n      dup4\n        /* \"#utility.yul\":3471:3489   */\n      add\n        /* \"#utility.yul\":3462:3468   */\n      dup7\n        /* \"#utility.yul\":3418:3490   */\n      tag_122\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":3500:3572   */\n      tag_175\n        /* \"#utility.yul\":3568:3570   */\n      0x60\n        /* \"#utility.yul\":3557:3566   */\n      dup4\n        /* \"#utility.yul\":3553:3571   */\n      add\n        /* \"#utility.yul\":3544:3550   */\n      dup6\n        /* \"#utility.yul\":3500:3572   */\n      tag_122\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":3582:3655   */\n      tag_176\n        /* \"#utility.yul\":3650:3653   */\n      0x80\n        /* \"#utility.yul\":3639:3648   */\n      dup4\n        /* \"#utility.yul\":3635:3654   */\n      add\n        /* \"#utility.yul\":3626:3632   */\n      dup5\n        /* \"#utility.yul\":3582:3655   */\n      tag_122\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":2998:3662   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3668:4000   */\n    tag_62:\n        /* \"#utility.yul\":3789:3793   */\n      0x00\n        /* \"#utility.yul\":3827:3829   */\n      0x40\n        /* \"#utility.yul\":3816:3825   */\n      dup3\n        /* \"#utility.yul\":3812:3830   */\n      add\n        /* \"#utility.yul\":3804:3830   */\n      swap1\n      pop\n        /* \"#utility.yul\":3840:3911   */\n      tag_178\n        /* \"#utility.yul\":3908:3909   */\n      0x00\n        /* \"#utility.yul\":3897:3906   */\n      dup4\n        /* \"#utility.yul\":3893:3910   */\n      add\n        /* \"#utility.yul\":3884:3890   */\n      dup6\n        /* \"#utility.yul\":3840:3911   */\n      tag_121\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":3921:3993   */\n      tag_179\n        /* \"#utility.yul\":3989:3991   */\n      0x20\n        /* \"#utility.yul\":3978:3987   */\n      dup4\n        /* \"#utility.yul\":3974:3992   */\n      add\n        /* \"#utility.yul\":3965:3971   */\n      dup5\n        /* \"#utility.yul\":3921:3993   */\n      tag_122\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":3668:4000   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4006:4122   */\n    tag_125:\n        /* \"#utility.yul\":4076:4097   */\n      tag_181\n        /* \"#utility.yul\":4091:4096   */\n      dup2\n        /* \"#utility.yul\":4076:4097   */\n      tag_111\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":4069:4074   */\n      dup2\n        /* \"#utility.yul\":4066:4098   */\n      eq\n        /* \"#utility.yul\":4056:4116   */\n      tag_182\n      jumpi\n        /* \"#utility.yul\":4112:4113   */\n      0x00\n        /* \"#utility.yul\":4109:4110   */\n      dup1\n        /* \"#utility.yul\":4102:4114   */\n      revert\n        /* \"#utility.yul\":4056:4116   */\n    tag_182:\n        /* \"#utility.yul\":4006:4122   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4128:4265   */\n    tag_126:\n        /* \"#utility.yul\":4182:4187   */\n      0x00\n        /* \"#utility.yul\":4213:4219   */\n      dup2\n        /* \"#utility.yul\":4207:4220   */\n      mload\n        /* \"#utility.yul\":4198:4220   */\n      swap1\n      pop\n        /* \"#utility.yul\":4229:4259   */\n      tag_184\n        /* \"#utility.yul\":4253:4258   */\n      dup2\n        /* \"#utility.yul\":4229:4259   */\n      tag_125\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":4128:4265   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4271:4616   */\n    tag_66:\n        /* \"#utility.yul\":4338:4344   */\n      0x00\n        /* \"#utility.yul\":4387:4389   */\n      0x20\n        /* \"#utility.yul\":4375:4384   */\n      dup3\n        /* \"#utility.yul\":4366:4373   */\n      dup5\n        /* \"#utility.yul\":4362:4385   */\n      sub\n        /* \"#utility.yul\":4358:4390   */\n      slt\n        /* \"#utility.yul\":4355:4474   */\n      iszero\n      tag_186\n      jumpi\n        /* \"#utility.yul\":4393:4472   */\n      tag_187\n      tag_114\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":4355:4474   */\n    tag_186:\n        /* \"#utility.yul\":4513:4514   */\n      0x00\n        /* \"#utility.yul\":4538:4599   */\n      tag_188\n        /* \"#utility.yul\":4591:4598   */\n      dup5\n        /* \"#utility.yul\":4582:4588   */\n      dup3\n        /* \"#utility.yul\":4571:4580   */\n      dup6\n        /* \"#utility.yul\":4567:4589   */\n      add\n        /* \"#utility.yul\":4538:4599   */\n      tag_126\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":4528:4599   */\n      swap2\n      pop\n        /* \"#utility.yul\":4484:4609   */\n      pop\n        /* \"#utility.yul\":4271:4616   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4622:4802   */\n    tag_127:\n        /* \"#utility.yul\":4670:4747   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4667:4668   */\n      0x00\n        /* \"#utility.yul\":4660:4748   */\n      mstore\n        /* \"#utility.yul\":4767:4771   */\n      0x11\n        /* \"#utility.yul\":4764:4765   */\n      0x04\n        /* \"#utility.yul\":4757:4772   */\n      mstore\n        /* \"#utility.yul\":4791:4795   */\n      0x24\n        /* \"#utility.yul\":4788:4789   */\n      0x00\n        /* \"#utility.yul\":4781:4796   */\n      revert\n        /* \"#utility.yul\":4808:4999   */\n    tag_69:\n        /* \"#utility.yul\":4848:4852   */\n      0x00\n        /* \"#utility.yul\":4868:4888   */\n      tag_191\n        /* \"#utility.yul\":4886:4887   */\n      dup3\n        /* \"#utility.yul\":4868:4888   */\n      tag_116\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":4863:4888   */\n      swap2\n      pop\n        /* \"#utility.yul\":4902:4922   */\n      tag_192\n        /* \"#utility.yul\":4920:4921   */\n      dup4\n        /* \"#utility.yul\":4902:4922   */\n      tag_116\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":4897:4922   */\n      swap3\n      pop\n        /* \"#utility.yul\":4941:4942   */\n      dup3\n        /* \"#utility.yul\":4938:4939   */\n      dup3\n        /* \"#utility.yul\":4935:4943   */\n      lt\n        /* \"#utility.yul\":4932:4966   */\n      iszero\n      tag_193\n      jumpi\n        /* \"#utility.yul\":4946:4964   */\n      tag_194\n      tag_127\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":4932:4966   */\n    tag_193:\n        /* \"#utility.yul\":4991:4992   */\n      dup3\n        /* \"#utility.yul\":4988:4989   */\n      dup3\n        /* \"#utility.yul\":4984:4993   */\n      sub\n        /* \"#utility.yul\":4976:4993   */\n      swap1\n      pop\n        /* \"#utility.yul\":4808:4999   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5005:5447   */\n    tag_72:\n        /* \"#utility.yul\":5154:5158   */\n      0x00\n        /* \"#utility.yul\":5192:5194   */\n      0x60\n        /* \"#utility.yul\":5181:5190   */\n      dup3\n        /* \"#utility.yul\":5177:5195   */\n      add\n        /* \"#utility.yul\":5169:5195   */\n      swap1\n      pop\n        /* \"#utility.yul\":5205:5276   */\n      tag_196\n        /* \"#utility.yul\":5273:5274   */\n      0x00\n        /* \"#utility.yul\":5262:5271   */\n      dup4\n        /* \"#utility.yul\":5258:5275   */\n      add\n        /* \"#utility.yul\":5249:5255   */\n      dup7\n        /* \"#utility.yul\":5205:5276   */\n      tag_121\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":5286:5358   */\n      tag_197\n        /* \"#utility.yul\":5354:5356   */\n      0x20\n        /* \"#utility.yul\":5343:5352   */\n      dup4\n        /* \"#utility.yul\":5339:5357   */\n      add\n        /* \"#utility.yul\":5330:5336   */\n      dup6\n        /* \"#utility.yul\":5286:5358   */\n      tag_121\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":5368:5440   */\n      tag_198\n        /* \"#utility.yul\":5436:5438   */\n      0x40\n        /* \"#utility.yul\":5425:5434   */\n      dup4\n        /* \"#utility.yul\":5421:5439   */\n      add\n        /* \"#utility.yul\":5412:5418   */\n      dup5\n        /* \"#utility.yul\":5368:5440   */\n      tag_122\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":5005:5447   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5453:5801   */\n    tag_78:\n        /* \"#utility.yul\":5493:5500   */\n      0x00\n        /* \"#utility.yul\":5516:5536   */\n      tag_200\n        /* \"#utility.yul\":5534:5535   */\n      dup3\n        /* \"#utility.yul\":5516:5536   */\n      tag_116\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":5511:5536   */\n      swap2\n      pop\n        /* \"#utility.yul\":5550:5570   */\n      tag_201\n        /* \"#utility.yul\":5568:5569   */\n      dup4\n        /* \"#utility.yul\":5550:5570   */\n      tag_116\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":5545:5570   */\n      swap3\n      pop\n        /* \"#utility.yul\":5738:5739   */\n      dup2\n        /* \"#utility.yul\":5670:5736   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5666:5740   */\n      div\n        /* \"#utility.yul\":5663:5664   */\n      dup4\n        /* \"#utility.yul\":5660:5741   */\n      gt\n        /* \"#utility.yul\":5655:5656   */\n      dup3\n        /* \"#utility.yul\":5648:5657   */\n      iszero\n        /* \"#utility.yul\":5641:5658   */\n      iszero\n        /* \"#utility.yul\":5637:5742   */\n      and\n        /* \"#utility.yul\":5634:5765   */\n      iszero\n      tag_202\n      jumpi\n        /* \"#utility.yul\":5745:5763   */\n      tag_203\n      tag_127\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":5634:5765   */\n    tag_202:\n        /* \"#utility.yul\":5793:5794   */\n      dup3\n        /* \"#utility.yul\":5790:5791   */\n      dup3\n        /* \"#utility.yul\":5786:5795   */\n      mul\n        /* \"#utility.yul\":5775:5795   */\n      swap1\n      pop\n        /* \"#utility.yul\":5453:5801   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5807:5987   */\n    tag_128:\n        /* \"#utility.yul\":5855:5932   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5852:5853   */\n      0x00\n        /* \"#utility.yul\":5845:5933   */\n      mstore\n        /* \"#utility.yul\":5952:5956   */\n      0x12\n        /* \"#utility.yul\":5949:5950   */\n      0x04\n        /* \"#utility.yul\":5942:5957   */\n      mstore\n        /* \"#utility.yul\":5976:5980   */\n      0x24\n        /* \"#utility.yul\":5973:5974   */\n      0x00\n        /* \"#utility.yul\":5966:5981   */\n      revert\n        /* \"#utility.yul\":5993:6178   */\n    tag_80:\n        /* \"#utility.yul\":6033:6034   */\n      0x00\n        /* \"#utility.yul\":6050:6070   */\n      tag_206\n        /* \"#utility.yul\":6068:6069   */\n      dup3\n        /* \"#utility.yul\":6050:6070   */\n      tag_116\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":6045:6070   */\n      swap2\n      pop\n        /* \"#utility.yul\":6084:6104   */\n      tag_207\n        /* \"#utility.yul\":6102:6103   */\n      dup4\n        /* \"#utility.yul\":6084:6104   */\n      tag_116\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":6079:6104   */\n      swap3\n      pop\n        /* \"#utility.yul\":6123:6124   */\n      dup3\n        /* \"#utility.yul\":6113:6148   */\n      tag_208\n      jumpi\n        /* \"#utility.yul\":6128:6146   */\n      tag_209\n      tag_128\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":6113:6148   */\n    tag_208:\n        /* \"#utility.yul\":6170:6171   */\n      dup3\n        /* \"#utility.yul\":6167:6168   */\n      dup3\n        /* \"#utility.yul\":6163:6172   */\n      div\n        /* \"#utility.yul\":6158:6172   */\n      swap1\n      pop\n        /* \"#utility.yul\":5993:6178   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6184:6489   */\n    tag_85:\n        /* \"#utility.yul\":6224:6227   */\n      0x00\n        /* \"#utility.yul\":6243:6263   */\n      tag_211\n        /* \"#utility.yul\":6261:6262   */\n      dup3\n        /* \"#utility.yul\":6243:6263   */\n      tag_116\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":6238:6263   */\n      swap2\n      pop\n        /* \"#utility.yul\":6277:6297   */\n      tag_212\n        /* \"#utility.yul\":6295:6296   */\n      dup4\n        /* \"#utility.yul\":6277:6297   */\n      tag_116\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":6272:6297   */\n      swap3\n      pop\n        /* \"#utility.yul\":6431:6432   */\n      dup3\n        /* \"#utility.yul\":6363:6429   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6359:6433   */\n      sub\n        /* \"#utility.yul\":6356:6357   */\n      dup3\n        /* \"#utility.yul\":6353:6434   */\n      gt\n        /* \"#utility.yul\":6350:6457   */\n      iszero\n      tag_213\n      jumpi\n        /* \"#utility.yul\":6437:6455   */\n      tag_214\n      tag_127\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":6350:6457   */\n    tag_213:\n        /* \"#utility.yul\":6481:6482   */\n      dup3\n        /* \"#utility.yul\":6478:6479   */\n      dup3\n        /* \"#utility.yul\":6474:6483   */\n      add\n        /* \"#utility.yul\":6467:6483   */\n      swap1\n      pop\n        /* \"#utility.yul\":6184:6489   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6495:6664   */\n    tag_129:\n        /* \"#utility.yul\":6579:6590   */\n      0x00\n        /* \"#utility.yul\":6613:6619   */\n      dup3\n        /* \"#utility.yul\":6608:6611   */\n      dup3\n        /* \"#utility.yul\":6601:6620   */\n      mstore\n        /* \"#utility.yul\":6653:6657   */\n      0x20\n        /* \"#utility.yul\":6648:6651   */\n      dup3\n        /* \"#utility.yul\":6644:6658   */\n      add\n        /* \"#utility.yul\":6629:6658   */\n      swap1\n      pop\n        /* \"#utility.yul\":6495:6664   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6670:6829   */\n    tag_130:\n        /* \"#utility.yul\":6810:6821   */\n      0x6e6f74206f776e65720000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6806:6807   */\n      0x00\n        /* \"#utility.yul\":6798:6804   */\n      dup3\n        /* \"#utility.yul\":6794:6808   */\n      add\n        /* \"#utility.yul\":6787:6822   */\n      mstore\n        /* \"#utility.yul\":6670:6829   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6835:7200   */\n    tag_131:\n        /* \"#utility.yul\":6977:6980   */\n      0x00\n        /* \"#utility.yul\":6998:7064   */\n      tag_218\n        /* \"#utility.yul\":7062:7063   */\n      0x09\n        /* \"#utility.yul\":7057:7060   */\n      dup4\n        /* \"#utility.yul\":6998:7064   */\n      tag_129\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":6991:7064   */\n      swap2\n      pop\n        /* \"#utility.yul\":7073:7166   */\n      tag_219\n        /* \"#utility.yul\":7162:7165   */\n      dup3\n        /* \"#utility.yul\":7073:7166   */\n      tag_130\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":7191:7193   */\n      0x20\n        /* \"#utility.yul\":7186:7189   */\n      dup3\n        /* \"#utility.yul\":7182:7194   */\n      add\n        /* \"#utility.yul\":7175:7194   */\n      swap1\n      pop\n        /* \"#utility.yul\":6835:7200   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7206:7625   */\n    tag_109:\n        /* \"#utility.yul\":7372:7376   */\n      0x00\n        /* \"#utility.yul\":7410:7412   */\n      0x20\n        /* \"#utility.yul\":7399:7408   */\n      dup3\n        /* \"#utility.yul\":7395:7413   */\n      add\n        /* \"#utility.yul\":7387:7413   */\n      swap1\n      pop\n        /* \"#utility.yul\":7459:7468   */\n      dup2\n        /* \"#utility.yul\":7453:7457   */\n      dup2\n        /* \"#utility.yul\":7449:7469   */\n      sub\n        /* \"#utility.yul\":7445:7446   */\n      0x00\n        /* \"#utility.yul\":7434:7443   */\n      dup4\n        /* \"#utility.yul\":7430:7447   */\n      add\n        /* \"#utility.yul\":7423:7470   */\n      mstore\n        /* \"#utility.yul\":7487:7618   */\n      tag_221\n        /* \"#utility.yul\":7613:7617   */\n      dup2\n        /* \"#utility.yul\":7487:7618   */\n      tag_131\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":7479:7618   */\n      swap1\n      pop\n        /* \"#utility.yul\":7206:7625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c49ff391cd994c68aa4379a7ef3627362854786d4078c8243d5ca32f6e45a8b364736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_164": {
									"entryPoint": null,
									"id": 164,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_stringliteral_c53404d4246b0640c5d546a4b55fb182a6f0c9ba5aa404eb9d02e6863598390c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 948,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c53404d4246b0640c5d546a4b55fb182a6f0c9ba5aa404eb9d02e6863598390c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 873,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 599,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_c53404d4246b0640c5d546a4b55fb182a6f0c9ba5aa404eb9d02e6863598390c": {
									"entryPoint": 907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7": {
									"entryPoint": 793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 656,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3466:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:1",
														"type": ""
													}
												],
												"src": "696:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "939:413:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "985:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "981:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "952:32:1"
															},
															"nodeType": "YulIf",
															"src": "949:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1078:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1122:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1216:129:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1261:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "901:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "912:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "924:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "932:6:1",
														"type": ""
													}
												],
												"src": "845:507:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1454:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1471:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1476:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1464:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1464:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1464:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1492:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1511:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1516:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1507:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1507:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1492:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1426:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1431:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1442:11:1",
														"type": ""
													}
												],
												"src": "1358:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1639:60:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1661:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1669:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1657:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1657:14:1"
																	},
																	{
																		"hexValue": "4e4f542c532030582041444452455353",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1673:18:1",
																		"type": "",
																		"value": "NOT,S 0X ADDRESS"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1650:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1650:42:1"
														}
													]
												},
												"name": "store_literal_in_memory_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1631:6:1",
														"type": ""
													}
												],
												"src": "1533:166:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1851:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1861:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1927:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1932:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1868:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1868:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1861:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2033:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7",
																	"nodeType": "YulIdentifier",
																	"src": "1944:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1944:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1944:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2046:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2057:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2062:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2053:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2053:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2046:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1839:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1847:3:1",
														"type": ""
													}
												],
												"src": "1705:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2248:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2258:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2270:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2281:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2266:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2266:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2258:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2305:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2316:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2301:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2301:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2324:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2330:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2320:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2320:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2294:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2294:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2350:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2484:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2358:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2358:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2350:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2228:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2243:4:1",
														"type": ""
													}
												],
												"src": "2077:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2608:58:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2630:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2638:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2626:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2626:14:1"
																	},
																	{
																		"hexValue": "4e4545442061677265656d656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2642:16:1",
																		"type": "",
																		"value": "NEED agreement"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2619:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2619:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2619:40:1"
														}
													]
												},
												"name": "store_literal_in_memory_c53404d4246b0640c5d546a4b55fb182a6f0c9ba5aa404eb9d02e6863598390c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2600:6:1",
														"type": ""
													}
												],
												"src": "2502:164:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2818:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2828:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2894:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2899:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2835:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2835:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2828:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3000:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c53404d4246b0640c5d546a4b55fb182a6f0c9ba5aa404eb9d02e6863598390c",
																	"nodeType": "YulIdentifier",
																	"src": "2911:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2911:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2911:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3013:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3024:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3029:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3020:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3020:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3013:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c53404d4246b0640c5d546a4b55fb182a6f0c9ba5aa404eb9d02e6863598390c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2806:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2814:3:1",
														"type": ""
													}
												],
												"src": "2672:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3215:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3225:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3233:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3272:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3283:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3268:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3268:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3291:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3297:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3287:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3287:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3261:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3261:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3261:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3317:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3451:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c53404d4246b0640c5d546a4b55fb182a6f0c9ba5aa404eb9d02e6863598390c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3325:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3325:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3317:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c53404d4246b0640c5d546a4b55fb182a6f0c9ba5aa404eb9d02e6863598390c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3195:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3210:4:1",
														"type": ""
													}
												],
												"src": "3044:419:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7(memPtr) {\n\n        mstore(add(memPtr, 0), \"NOT,S 0X ADDRESS\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c53404d4246b0640c5d546a4b55fb182a6f0c9ba5aa404eb9d02e6863598390c(memPtr) {\n\n        mstore(add(memPtr, 0), \"NEED agreement\")\n\n    }\n\n    function abi_encode_t_stringliteral_c53404d4246b0640c5d546a4b55fb182a6f0c9ba5aa404eb9d02e6863598390c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_c53404d4246b0640c5d546a4b55fb182a6f0c9ba5aa404eb9d02e6863598390c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c53404d4246b0640c5d546a4b55fb182a6f0c9ba5aa404eb9d02e6863598390c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c53404d4246b0640c5d546a4b55fb182a6f0c9ba5aa404eb9d02e6863598390c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200169b3803806200169b8339818101604052810190620000379190620002c1565b33600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620000ea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000e19062000369565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200015c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001539062000369565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614620001cd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001c490620003db565b60405180910390fd5b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620003fd565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000289826200025c565b9050919050565b6200029b816200027c565b8114620002a757600080fd5b50565b600081519050620002bb8162000290565b92915050565b60008060408385031215620002db57620002da62000257565b5b6000620002eb85828601620002aa565b9250506020620002fe85828601620002aa565b9150509250929050565b600082825260208201905092915050565b7f4e4f542c53203058204144445245535300000000000000000000000000000000600082015250565b60006200035160108362000308565b91506200035e8262000319565b602082019050919050565b60006020820190508181036000830152620003848162000342565b9050919050565b7f4e4545442061677265656d656e74000000000000000000000000000000000000600082015250565b6000620003c3600e8362000308565b9150620003d0826200038b565b602082019050919050565b60006020820190508181036000830152620003f681620003b4565b9050919050565b61128e806200040d6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806371ca337d1161007157806371ca337d1461017f5780638c93ecff1461019d5780638da5cb5b146101d1578063b2237ba3146101ef578063d942727f1461020b578063dab2997b14610229576100b4565b80630fdb1c10146100b9578063227a473b146100d75780632c46502d146101075780634641257d14610125578063529aca49146101435780635e9f443514610161575b600080fd5b6100c1610247565b6040516100ce9190610dfa565b60405180910390f35b6100f160048036038101906100ec9190610e50565b610466565b6040516100fe9190610dfa565b60405180910390f35b61010f6107c4565b60405161011c9190610ebe565b60405180910390f35b61012d6107ea565b60405161013a9190610dfa565b60405180910390f35b61014b610b93565b6040516101589190610ee8565b60405180910390f35b610169610c68565b6040516101769190610ee8565b60405180910390f35b610187610cb7565b6040516101949190610ee8565b60405180910390f35b6101b760048036038101906101b29190610f2f565b610cbd565b6040516101c8959493929190610f5c565b60405180910390f35b6101d9610cf3565b6040516101e69190610ebe565b60405180910390f35b61020960048036038101906102049190610e50565b610d19565b005b610213610db3565b6040516102209190610ee8565b60405180910390f35b610231610db9565b60405161023e9190610ebe565b60405180910390f35b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546040518363ffffffff1660e01b81526004016102e8929190610faf565b6020604051808303816000875af1158015610307573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032b9190611004565b503373ffffffffffffffffffffffffffffffffffffffff167fa9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546040516103b49190610ee8565b60405180910390a2600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600360008282546104109190611060565b925050819055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506001905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016104c793929190611094565b6020604051808303816000875af11580156104e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050a9190611004565b503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f1fd6ebb971d137acf3f01670862b8a96758cfc7e39dccb093e68daf461b0262c846040516105689190610ee8565b60405180910390a36301e133806064600054600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546105c791906110cb565b6105d19190611154565b6105db9190611154565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154426106299190611060565b61063391906110cb565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546106cb9190611185565b9250508190555042600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550816003600082825461072b9190611185565b92505081905550600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004018190555060019050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006301e133806064600054600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461084391906110cb565b61084d9190611154565b6108579190611154565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154426108a59190611060565b6108af91906110cb565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201546108fc9190611185565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030181905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301546040518363ffffffff1660e01b81526004016109e1929190610faf565b6020604051808303816000875af1158015610a00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a249190611004565b503373ffffffffffffffffffffffffffffffffffffffff167fa9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154604051610aad9190610ee8565b60405180910390a26000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555042600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401819055506001905090565b600080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004015442610be49190611060565b905060006301e133806064600054600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154610c3f91906110cb565b610c499190611154565b610c539190611154565b82610c5e91906110cb565b9050809250505090565b600080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015490508091505090565b60005481565b60056020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154905085565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610da9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da090611238565b60405180910390fd5b8060008190555050565b60035481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008115159050919050565b610df481610ddf565b82525050565b6000602082019050610e0f6000830184610deb565b92915050565b600080fd5b6000819050919050565b610e2d81610e1a565b8114610e3857600080fd5b50565b600081359050610e4a81610e24565b92915050565b600060208284031215610e6657610e65610e15565b5b6000610e7484828501610e3b565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ea882610e7d565b9050919050565b610eb881610e9d565b82525050565b6000602082019050610ed36000830184610eaf565b92915050565b610ee281610e1a565b82525050565b6000602082019050610efd6000830184610ed9565b92915050565b610f0c81610e9d565b8114610f1757600080fd5b50565b600081359050610f2981610f03565b92915050565b600060208284031215610f4557610f44610e15565b5b6000610f5384828501610f1a565b91505092915050565b600060a082019050610f716000830188610ed9565b610f7e6020830187610ed9565b610f8b6040830186610ed9565b610f986060830185610ed9565b610fa56080830184610ed9565b9695505050505050565b6000604082019050610fc46000830185610eaf565b610fd16020830184610ed9565b9392505050565b610fe181610ddf565b8114610fec57600080fd5b50565b600081519050610ffe81610fd8565b92915050565b60006020828403121561101a57611019610e15565b5b600061102884828501610fef565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061106b82610e1a565b915061107683610e1a565b92508282101561108957611088611031565b5b828203905092915050565b60006060820190506110a96000830186610eaf565b6110b66020830185610eaf565b6110c36040830184610ed9565b949350505050565b60006110d682610e1a565b91506110e183610e1a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561111a57611119611031565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061115f82610e1a565b915061116a83610e1a565b92508261117a57611179611125565b5b828204905092915050565b600061119082610e1a565b915061119b83610e1a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111d0576111cf611031565b5b828201905092915050565b600082825260208201905092915050565b7f6e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b60006112226009836111db565b915061122d826111ec565b602082019050919050565b6000602082019050818103600083015261125181611215565b905091905056fea2646970667358221220c49ff391cd994c68aa4379a7ef3627362854786d4078c8243d5ca32f6e45a8b364736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x169B CODESIZE SUB DUP1 PUSH3 0x169B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2C1 JUMP JUMPDEST CALLER PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xEA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xE1 SWAP1 PUSH3 0x369 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x15C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x153 SWAP1 PUSH3 0x369 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x1CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1C4 SWAP1 PUSH3 0x3DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x3FD JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x289 DUP3 PUSH3 0x25C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x29B DUP2 PUSH3 0x27C JUMP JUMPDEST DUP2 EQ PUSH3 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2BB DUP2 PUSH3 0x290 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2DB JUMPI PUSH3 0x2DA PUSH3 0x257 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2EB DUP6 DUP3 DUP7 ADD PUSH3 0x2AA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x2FE DUP6 DUP3 DUP7 ADD PUSH3 0x2AA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E4F542C53203058204144445245535300000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x351 PUSH1 0x10 DUP4 PUSH3 0x308 JUMP JUMPDEST SWAP2 POP PUSH3 0x35E DUP3 PUSH3 0x319 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x384 DUP2 PUSH3 0x342 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E4545442061677265656D656E74000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3C3 PUSH1 0xE DUP4 PUSH3 0x308 JUMP JUMPDEST SWAP2 POP PUSH3 0x3D0 DUP3 PUSH3 0x38B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x3F6 DUP2 PUSH3 0x3B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x128E DUP1 PUSH3 0x40D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x71CA337D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x71CA337D EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x8C93ECFF EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xB2237BA3 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xD942727F EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0xDAB2997B EQ PUSH2 0x229 JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0xFDB1C10 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x227A473B EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x2C46502D EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x529ACA49 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x5E9F4435 EQ PUSH2 0x161 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x247 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xDFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0xE50 JUMP JUMPDEST PUSH2 0x466 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0xDFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10F PUSH2 0x7C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11C SWAP2 SWAP1 PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12D PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0xDFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14B PUSH2 0xB93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0xEE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH2 0xC68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0xEE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0xCB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0xEE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH2 0xCBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D9 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0xE50 JUMP JUMPDEST PUSH2 0xD19 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x213 PUSH2 0xDB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0xEE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E8 SWAP3 SWAP2 SWAP1 PUSH2 0xFAF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x307 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x1004 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9059CBB2AB09EB219583F4A59A5D0623ADE346D962BCD4E46B11DA047C9049B PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0xEE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x410 SWAP2 SWAP1 PUSH2 0x1060 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1094 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x50A SWAP2 SWAP1 PUSH2 0x1004 JUMP JUMPDEST POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1FD6EBB971D137ACF3F01670862B8A96758CFC7E39DCCB093E68DAF461B0262C DUP5 PUSH1 0x40 MLOAD PUSH2 0x568 SWAP2 SWAP1 PUSH2 0xEE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH4 0x1E13380 PUSH1 0x64 PUSH1 0x0 SLOAD PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0x10CB JUMP JUMPDEST PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x1154 JUMP JUMPDEST PUSH2 0x5DB SWAP2 SWAP1 PUSH2 0x1154 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x629 SWAP2 SWAP1 PUSH2 0x1060 JUMP JUMPDEST PUSH2 0x633 SWAP2 SWAP1 PUSH2 0x10CB JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6CB SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x72B SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1E13380 PUSH1 0x64 PUSH1 0x0 SLOAD PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x843 SWAP2 SWAP1 PUSH2 0x10CB JUMP JUMPDEST PUSH2 0x84D SWAP2 SWAP1 PUSH2 0x1154 JUMP JUMPDEST PUSH2 0x857 SWAP2 SWAP1 PUSH2 0x1154 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x8A5 SWAP2 SWAP1 PUSH2 0x1060 JUMP JUMPDEST PUSH2 0x8AF SWAP2 SWAP1 PUSH2 0x10CB JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x8FC SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E1 SWAP3 SWAP2 SWAP1 PUSH2 0xFAF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA00 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA24 SWAP2 SWAP1 PUSH2 0x1004 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9059CBB2AB09EB219583F4A59A5D0623ADE346D962BCD4E46B11DA047C9049B PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xAAD SWAP2 SWAP1 PUSH2 0xEE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD TIMESTAMP PUSH2 0xBE4 SWAP2 SWAP1 PUSH2 0x1060 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH4 0x1E13380 PUSH1 0x64 PUSH1 0x0 SLOAD PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0xC3F SWAP2 SWAP1 PUSH2 0x10CB JUMP JUMPDEST PUSH2 0xC49 SWAP2 SWAP1 PUSH2 0x1154 JUMP JUMPDEST PUSH2 0xC53 SWAP2 SWAP1 PUSH2 0x1154 JUMP JUMPDEST DUP3 PUSH2 0xC5E SWAP2 SWAP1 PUSH2 0x10CB JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDA0 SWAP1 PUSH2 0x1238 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF4 DUP2 PUSH2 0xDDF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE0F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE2D DUP2 PUSH2 0xE1A JUMP JUMPDEST DUP2 EQ PUSH2 0xE38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE4A DUP2 PUSH2 0xE24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE66 JUMPI PUSH2 0xE65 PUSH2 0xE15 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE74 DUP5 DUP3 DUP6 ADD PUSH2 0xE3B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA8 DUP3 PUSH2 0xE7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEB8 DUP2 PUSH2 0xE9D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xED3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEE2 DUP2 PUSH2 0xE1A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEFD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xED9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF0C DUP2 PUSH2 0xE9D JUMP JUMPDEST DUP2 EQ PUSH2 0xF17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF29 DUP2 PUSH2 0xF03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF45 JUMPI PUSH2 0xF44 PUSH2 0xE15 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF53 DUP5 DUP3 DUP6 ADD PUSH2 0xF1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0xF71 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0xED9 JUMP JUMPDEST PUSH2 0xF7E PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xED9 JUMP JUMPDEST PUSH2 0xF8B PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xED9 JUMP JUMPDEST PUSH2 0xF98 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xED9 JUMP JUMPDEST PUSH2 0xFA5 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xED9 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xFC4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xEAF JUMP JUMPDEST PUSH2 0xFD1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xED9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xFE1 DUP2 PUSH2 0xDDF JUMP JUMPDEST DUP2 EQ PUSH2 0xFEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xFFE DUP2 PUSH2 0xFD8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x101A JUMPI PUSH2 0x1019 PUSH2 0xE15 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1028 DUP5 DUP3 DUP6 ADD PUSH2 0xFEF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x106B DUP3 PUSH2 0xE1A JUMP JUMPDEST SWAP2 POP PUSH2 0x1076 DUP4 PUSH2 0xE1A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1089 JUMPI PUSH2 0x1088 PUSH2 0x1031 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x10A9 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xEAF JUMP JUMPDEST PUSH2 0x10B6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xEAF JUMP JUMPDEST PUSH2 0x10C3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xED9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D6 DUP3 PUSH2 0xE1A JUMP JUMPDEST SWAP2 POP PUSH2 0x10E1 DUP4 PUSH2 0xE1A JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x111A JUMPI PUSH2 0x1119 PUSH2 0x1031 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x115F DUP3 PUSH2 0xE1A JUMP JUMPDEST SWAP2 POP PUSH2 0x116A DUP4 PUSH2 0xE1A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x117A JUMPI PUSH2 0x1179 PUSH2 0x1125 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1190 DUP3 PUSH2 0xE1A JUMP JUMPDEST SWAP2 POP PUSH2 0x119B DUP4 PUSH2 0xE1A JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x11D0 JUMPI PUSH2 0x11CF PUSH2 0x1031 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F74206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1222 PUSH1 0x9 DUP4 PUSH2 0x11DB JUMP JUMPDEST SWAP2 POP PUSH2 0x122D DUP3 PUSH2 0x11EC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1251 DUP2 PUSH2 0x1215 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 SWAP16 RETURN SWAP2 0xCD SWAP10 0x4C PUSH9 0xAA4379A7EF36273628 SLOAD PUSH25 0x6D4078C8243D5CA32F6E45A8B364736F6C634300080F003300 ",
							"sourceMap": "732:4584:0:-:0;;;1381:338;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1452:10;1444:5;;:18;;;;;;;;;;;;;;;;;;1504:1;1481:25;;:11;:25;;;1473:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;1565:1;1545:22;;:8;:22;;;1537:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;1621:8;1606:23;;:11;:23;;;1598:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;1671:11;1658:10;;:24;;;;;;;;;;;;;;;;;;1703:8;1693:7;;:18;;;;;;;;;;;;;;;;;;1381:338;;732:4584;;88:117:1;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:169::-;1442:11;1476:6;1471:3;1464:19;1516:4;1511:3;1507:14;1492:29;;1358:169;;;;:::o;1533:166::-;1673:18;1669:1;1661:6;1657:14;1650:42;1533:166;:::o;1705:366::-;1847:3;1868:67;1932:2;1927:3;1868:67;:::i;:::-;1861:74;;1944:93;2033:3;1944:93;:::i;:::-;2062:2;2057:3;2053:12;2046:19;;1705:366;;;:::o;2077:419::-;2243:4;2281:2;2270:9;2266:18;2258:26;;2330:9;2324:4;2320:20;2316:1;2305:9;2301:17;2294:47;2358:131;2484:4;2358:131;:::i;:::-;2350:139;;2077:419;;;:::o;2502:164::-;2642:16;2638:1;2630:6;2626:14;2619:40;2502:164;:::o;2672:366::-;2814:3;2835:67;2899:2;2894:3;2835:67;:::i;:::-;2828:74;;2911:93;3000:3;2911:93;:::i;:::-;3029:2;3024:3;3020:12;3013:19;;2672:366;;;:::o;3044:419::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3297:9;3291:4;3287:20;3283:1;3272:9;3268:17;3261:47;3325:131;3451:4;3325:131;:::i;:::-;3317:139;;3044:419;;;:::o;732:4584:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Stake_284": {
									"entryPoint": 1126,
									"id": 284,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@User_Map_116": {
									"entryPoint": 3261,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@harvest_423": {
									"entryPoint": 2026,
									"id": 423,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@lastTotokenRatio_476": {
									"entryPoint": 3176,
									"id": 476,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@newTotokenRatio_460": {
									"entryPoint": 2963,
									"id": 460,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_78": {
									"entryPoint": 3315,
									"id": 78,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ratio_70": {
									"entryPoint": 3255,
									"id": 70,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setRatio_188": {
									"entryPoint": 3353,
									"id": 188,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakeSupple_76": {
									"entryPoint": 3507,
									"id": 76,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@staketoken_72": {
									"entryPoint": 3513,
									"id": 72,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totoken_74": {
									"entryPoint": 1988,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withDraw_331": {
									"entryPoint": 583,
									"id": 331,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4100,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3759,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4244,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4015,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3578,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4664,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3816,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3932,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4436,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4145,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4389,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3605,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e": {
									"entryPoint": 4588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3620,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7628:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "49:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "59:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "84:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "77:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "77:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "70:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "70:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "59:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "31:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "41:7:1",
														"type": ""
													}
												],
												"src": "7:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "162:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "179:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "199:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "184:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "184:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "172:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "172:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "172:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "150:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "157:3:1",
														"type": ""
													}
												],
												"src": "103:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "310:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "320:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "332:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "328:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "328:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "320:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "394:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "407:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "418:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "403:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "403:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "356:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "356:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "282:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "294:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "305:4:1",
														"type": ""
													}
												],
												"src": "218:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "474:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "484:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "500:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "494:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "484:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "467:6:1",
														"type": ""
													}
												],
												"src": "434:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "604:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "621:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "614:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "614:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "614:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "515:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "727:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "744:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "747:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "737:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "737:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "737:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "638:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "806:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "816:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "827:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "816:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "788:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "798:7:1",
														"type": ""
													}
												],
												"src": "761:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "887:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "944:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "953:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "956:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "946:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "946:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "946:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "910:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "935:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "917:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "917:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "907:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "907:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "900:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "900:43:1"
															},
															"nodeType": "YulIf",
															"src": "897:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "880:5:1",
														"type": ""
													}
												],
												"src": "844:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1024:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1034:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1056:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1043:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1043:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1034:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1099:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1072:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1072:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1072:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1002:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1010:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1018:5:1",
														"type": ""
													}
												],
												"src": "972:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1183:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1229:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1231:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1231:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1231:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1204:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1213:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1200:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1200:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1225:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1196:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1196:32:1"
															},
															"nodeType": "YulIf",
															"src": "1193:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1322:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1337:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1351:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1341:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1366:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1401:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1412:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1397:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1397:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1421:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1376:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1376:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1366:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1153:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1164:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1176:6:1",
														"type": ""
													}
												],
												"src": "1117:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1497:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1507:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1522:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1529:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1518:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1518:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1507:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1479:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1489:7:1",
														"type": ""
													}
												],
												"src": "1452:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1629:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1639:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1668:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1650:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1650:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1639:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1611:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1621:7:1",
														"type": ""
													}
												],
												"src": "1584:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1751:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1768:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1791:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1773:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1773:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1761:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1761:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1761:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1739:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1746:3:1",
														"type": ""
													}
												],
												"src": "1686:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1908:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1918:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1930:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1941:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1926:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1926:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1918:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1998:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2011:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2022:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2007:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2007:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1954:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1954:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1954:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1880:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1892:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1903:4:1",
														"type": ""
													}
												],
												"src": "1810:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2103:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2120:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2143:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2125:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2125:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2113:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2113:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2113:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2091:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2098:3:1",
														"type": ""
													}
												],
												"src": "2038:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2260:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2270:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2282:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2293:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2278:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2278:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2270:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2350:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2363:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2374:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2359:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2359:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2306:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2306:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2306:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2232:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2244:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2255:4:1",
														"type": ""
													}
												],
												"src": "2162:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2433:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2490:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2499:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2502:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2492:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2492:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2492:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2456:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2481:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2463:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2463:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2453:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2453:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2446:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2446:43:1"
															},
															"nodeType": "YulIf",
															"src": "2443:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2426:5:1",
														"type": ""
													}
												],
												"src": "2390:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2570:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2580:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2602:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2589:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2589:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2580:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2645:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2618:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2618:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2618:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2548:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2556:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2564:5:1",
														"type": ""
													}
												],
												"src": "2518:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2729:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2775:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2777:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2777:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2777:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2750:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2759:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2746:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2746:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2771:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2742:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2742:32:1"
															},
															"nodeType": "YulIf",
															"src": "2739:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2868:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2883:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2897:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2887:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2912:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2947:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2958:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2943:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2943:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2967:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2922:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2922:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2912:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2699:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2710:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2722:6:1",
														"type": ""
													}
												],
												"src": "2663:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3208:454:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3218:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3230:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3241:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3226:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3226:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3218:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3255:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3255:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3255:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3380:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3393:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3404:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3389:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3389:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3336:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3336:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3336:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3462:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3475:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3486:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3471:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3471:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3418:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3418:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3418:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "3544:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3557:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3568:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3553:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3553:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3500:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3500:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3500:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "3626:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3639:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3650:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3635:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3635:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3582:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3582:73:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3582:73:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3148:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3160:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3168:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3176:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3184:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3192:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3203:4:1",
														"type": ""
													}
												],
												"src": "2998:664:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3794:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3804:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3816:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3827:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3812:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3812:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3804:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3884:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3897:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3908:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3893:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3893:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3840:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3840:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3840:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3965:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3978:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3989:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3974:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3974:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3921:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3921:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3921:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3758:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3770:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3778:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3789:4:1",
														"type": ""
													}
												],
												"src": "3668:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4046:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4100:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4109:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4112:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4102:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4102:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4102:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4069:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4091:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "4076:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4076:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4066:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4066:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4059:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4059:40:1"
															},
															"nodeType": "YulIf",
															"src": "4056:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4039:5:1",
														"type": ""
													}
												],
												"src": "4006:116:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4188:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4198:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4213:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4207:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4207:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4198:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4253:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "4229:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4229:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4229:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4166:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4174:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4182:5:1",
														"type": ""
													}
												],
												"src": "4128:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4345:271:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4391:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4393:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4393:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4393:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4366:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4375:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4362:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4362:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4387:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4358:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4358:32:1"
															},
															"nodeType": "YulIf",
															"src": "4355:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "4484:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4499:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4513:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4503:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4528:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4571:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4582:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4567:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4567:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4591:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4538:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4538:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4528:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4315:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4326:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4338:6:1",
														"type": ""
													}
												],
												"src": "4271:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4650:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4667:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4670:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4660:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4660:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4660:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4764:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4767:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4757:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4757:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4757:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4788:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4791:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4781:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4781:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4781:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4622:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4853:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4863:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4886:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4868:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4868:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4863:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4897:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4920:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4902:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4902:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4897:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4944:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4946:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4946:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4946:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4938:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4941:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4935:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4935:8:1"
															},
															"nodeType": "YulIf",
															"src": "4932:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4976:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4988:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4991:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4984:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4984:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4976:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4839:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4842:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4848:4:1",
														"type": ""
													}
												],
												"src": "4808:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5159:288:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5169:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5181:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5192:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5177:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5177:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5169:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5249:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5262:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5273:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5258:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5258:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5205:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5205:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5205:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5330:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5343:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5354:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5339:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5339:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5286:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5286:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5286:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5412:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5425:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5436:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5421:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5421:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5368:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5368:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5368:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5115:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5127:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5135:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5143:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5154:4:1",
														"type": ""
													}
												],
												"src": "5005:442:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5501:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5511:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5534:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5516:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5516:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5511:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5545:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5568:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5550:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5550:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5545:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5743:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5745:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5745:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5745:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5655:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5648:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5648:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5641:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5641:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5663:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5670:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5738:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "5666:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5666:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5660:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5660:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5637:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5637:105:1"
															},
															"nodeType": "YulIf",
															"src": "5634:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5775:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5790:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5793:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5786:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5786:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "5775:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5484:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5487:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "5493:7:1",
														"type": ""
													}
												],
												"src": "5453:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5835:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5852:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5855:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5845:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5845:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5845:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5949:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5952:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5942:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5942:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5942:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5973:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5976:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5966:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5966:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5966:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "5807:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6035:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6045:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6068:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6050:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6050:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6045:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6079:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6102:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6084:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6084:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6079:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6126:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "6128:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6128:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6128:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6123:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6116:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6116:9:1"
															},
															"nodeType": "YulIf",
															"src": "6113:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6158:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6167:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6170:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6163:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6163:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6158:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6024:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6027:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "6033:1:1",
														"type": ""
													}
												],
												"src": "5993:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6228:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6238:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6261:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6243:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6243:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6238:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6272:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6295:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6277:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6277:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6272:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6435:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6437:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6437:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6437:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6356:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6363:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6431:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6359:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6359:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6353:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6353:81:1"
															},
															"nodeType": "YulIf",
															"src": "6350:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6467:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6478:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6481:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6474:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6474:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6467:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6215:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6218:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6224:3:1",
														"type": ""
													}
												],
												"src": "6184:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6591:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6608:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6613:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6601:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6601:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6601:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6629:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6648:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6653:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6644:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6644:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6629:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6563:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6568:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6579:11:1",
														"type": ""
													}
												],
												"src": "6495:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6776:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6798:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6806:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6794:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6794:14:1"
																	},
																	{
																		"hexValue": "6e6f74206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6810:11:1",
																		"type": "",
																		"value": "not owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6787:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6787:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6787:35:1"
														}
													]
												},
												"name": "store_literal_in_memory_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6768:6:1",
														"type": ""
													}
												],
												"src": "6670:159:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6981:219:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6991:73:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7057:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7062:1:1",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6998:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6998:66:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6991:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7162:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																	"nodeType": "YulIdentifier",
																	"src": "7073:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7073:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7073:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7175:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7186:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7191:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7182:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7182:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7175:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6969:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6977:3:1",
														"type": ""
													}
												],
												"src": "6835:365:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7377:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7387:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7399:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7410:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7395:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7395:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7387:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7434:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7445:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7430:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7430:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7453:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7459:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7449:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7449:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7423:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7423:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7423:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7479:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7613:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7487:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7487:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7479:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7357:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7372:4:1",
														"type": ""
													}
												],
												"src": "7206:419:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e(memPtr) {\n\n        mstore(add(memPtr, 0), \"not owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100b45760003560e01c806371ca337d1161007157806371ca337d1461017f5780638c93ecff1461019d5780638da5cb5b146101d1578063b2237ba3146101ef578063d942727f1461020b578063dab2997b14610229576100b4565b80630fdb1c10146100b9578063227a473b146100d75780632c46502d146101075780634641257d14610125578063529aca49146101435780635e9f443514610161575b600080fd5b6100c1610247565b6040516100ce9190610dfa565b60405180910390f35b6100f160048036038101906100ec9190610e50565b610466565b6040516100fe9190610dfa565b60405180910390f35b61010f6107c4565b60405161011c9190610ebe565b60405180910390f35b61012d6107ea565b60405161013a9190610dfa565b60405180910390f35b61014b610b93565b6040516101589190610ee8565b60405180910390f35b610169610c68565b6040516101769190610ee8565b60405180910390f35b610187610cb7565b6040516101949190610ee8565b60405180910390f35b6101b760048036038101906101b29190610f2f565b610cbd565b6040516101c8959493929190610f5c565b60405180910390f35b6101d9610cf3565b6040516101e69190610ebe565b60405180910390f35b61020960048036038101906102049190610e50565b610d19565b005b610213610db3565b6040516102209190610ee8565b60405180910390f35b610231610db9565b60405161023e9190610ebe565b60405180910390f35b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546040518363ffffffff1660e01b81526004016102e8929190610faf565b6020604051808303816000875af1158015610307573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032b9190611004565b503373ffffffffffffffffffffffffffffffffffffffff167fa9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546040516103b49190610ee8565b60405180910390a2600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600360008282546104109190611060565b925050819055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506001905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016104c793929190611094565b6020604051808303816000875af11580156104e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050a9190611004565b503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f1fd6ebb971d137acf3f01670862b8a96758cfc7e39dccb093e68daf461b0262c846040516105689190610ee8565b60405180910390a36301e133806064600054600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546105c791906110cb565b6105d19190611154565b6105db9190611154565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154426106299190611060565b61063391906110cb565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546106cb9190611185565b9250508190555042600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550816003600082825461072b9190611185565b92505081905550600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004018190555060019050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006301e133806064600054600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461084391906110cb565b61084d9190611154565b6108579190611154565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154426108a59190611060565b6108af91906110cb565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201546108fc9190611185565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030181905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301546040518363ffffffff1660e01b81526004016109e1929190610faf565b6020604051808303816000875af1158015610a00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a249190611004565b503373ffffffffffffffffffffffffffffffffffffffff167fa9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154604051610aad9190610ee8565b60405180910390a26000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555042600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401819055506001905090565b600080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004015442610be49190611060565b905060006301e133806064600054600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154610c3f91906110cb565b610c499190611154565b610c539190611154565b82610c5e91906110cb565b9050809250505090565b600080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015490508091505090565b60005481565b60056020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154905085565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610da9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da090611238565b60405180910390fd5b8060008190555050565b60035481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008115159050919050565b610df481610ddf565b82525050565b6000602082019050610e0f6000830184610deb565b92915050565b600080fd5b6000819050919050565b610e2d81610e1a565b8114610e3857600080fd5b50565b600081359050610e4a81610e24565b92915050565b600060208284031215610e6657610e65610e15565b5b6000610e7484828501610e3b565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ea882610e7d565b9050919050565b610eb881610e9d565b82525050565b6000602082019050610ed36000830184610eaf565b92915050565b610ee281610e1a565b82525050565b6000602082019050610efd6000830184610ed9565b92915050565b610f0c81610e9d565b8114610f1757600080fd5b50565b600081359050610f2981610f03565b92915050565b600060208284031215610f4557610f44610e15565b5b6000610f5384828501610f1a565b91505092915050565b600060a082019050610f716000830188610ed9565b610f7e6020830187610ed9565b610f8b6040830186610ed9565b610f986060830185610ed9565b610fa56080830184610ed9565b9695505050505050565b6000604082019050610fc46000830185610eaf565b610fd16020830184610ed9565b9392505050565b610fe181610ddf565b8114610fec57600080fd5b50565b600081519050610ffe81610fd8565b92915050565b60006020828403121561101a57611019610e15565b5b600061102884828501610fef565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061106b82610e1a565b915061107683610e1a565b92508282101561108957611088611031565b5b828203905092915050565b60006060820190506110a96000830186610eaf565b6110b66020830185610eaf565b6110c36040830184610ed9565b949350505050565b60006110d682610e1a565b91506110e183610e1a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561111a57611119611031565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061115f82610e1a565b915061116a83610e1a565b92508261117a57611179611125565b5b828204905092915050565b600061119082610e1a565b915061119b83610e1a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111d0576111cf611031565b5b828201905092915050565b600082825260208201905092915050565b7f6e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b60006112226009836111db565b915061122d826111ec565b602082019050919050565b6000602082019050818103600083015261125181611215565b905091905056fea2646970667358221220c49ff391cd994c68aa4379a7ef3627362854786d4078c8243d5ca32f6e45a8b364736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x71CA337D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x71CA337D EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x8C93ECFF EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xB2237BA3 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xD942727F EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0xDAB2997B EQ PUSH2 0x229 JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0xFDB1C10 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x227A473B EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x2C46502D EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x529ACA49 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x5E9F4435 EQ PUSH2 0x161 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x247 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xDFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0xE50 JUMP JUMPDEST PUSH2 0x466 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0xDFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10F PUSH2 0x7C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11C SWAP2 SWAP1 PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12D PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0xDFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14B PUSH2 0xB93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0xEE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH2 0xC68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0xEE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0xCB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0xEE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH2 0xCBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D9 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0xE50 JUMP JUMPDEST PUSH2 0xD19 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x213 PUSH2 0xDB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0xEE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E8 SWAP3 SWAP2 SWAP1 PUSH2 0xFAF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x307 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x1004 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9059CBB2AB09EB219583F4A59A5D0623ADE346D962BCD4E46B11DA047C9049B PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0xEE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x410 SWAP2 SWAP1 PUSH2 0x1060 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1094 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x50A SWAP2 SWAP1 PUSH2 0x1004 JUMP JUMPDEST POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1FD6EBB971D137ACF3F01670862B8A96758CFC7E39DCCB093E68DAF461B0262C DUP5 PUSH1 0x40 MLOAD PUSH2 0x568 SWAP2 SWAP1 PUSH2 0xEE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH4 0x1E13380 PUSH1 0x64 PUSH1 0x0 SLOAD PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0x10CB JUMP JUMPDEST PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x1154 JUMP JUMPDEST PUSH2 0x5DB SWAP2 SWAP1 PUSH2 0x1154 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x629 SWAP2 SWAP1 PUSH2 0x1060 JUMP JUMPDEST PUSH2 0x633 SWAP2 SWAP1 PUSH2 0x10CB JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6CB SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x72B SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1E13380 PUSH1 0x64 PUSH1 0x0 SLOAD PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x843 SWAP2 SWAP1 PUSH2 0x10CB JUMP JUMPDEST PUSH2 0x84D SWAP2 SWAP1 PUSH2 0x1154 JUMP JUMPDEST PUSH2 0x857 SWAP2 SWAP1 PUSH2 0x1154 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x8A5 SWAP2 SWAP1 PUSH2 0x1060 JUMP JUMPDEST PUSH2 0x8AF SWAP2 SWAP1 PUSH2 0x10CB JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x8FC SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E1 SWAP3 SWAP2 SWAP1 PUSH2 0xFAF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA00 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA24 SWAP2 SWAP1 PUSH2 0x1004 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9059CBB2AB09EB219583F4A59A5D0623ADE346D962BCD4E46B11DA047C9049B PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xAAD SWAP2 SWAP1 PUSH2 0xEE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD TIMESTAMP PUSH2 0xBE4 SWAP2 SWAP1 PUSH2 0x1060 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH4 0x1E13380 PUSH1 0x64 PUSH1 0x0 SLOAD PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0xC3F SWAP2 SWAP1 PUSH2 0x10CB JUMP JUMPDEST PUSH2 0xC49 SWAP2 SWAP1 PUSH2 0x1154 JUMP JUMPDEST PUSH2 0xC53 SWAP2 SWAP1 PUSH2 0x1154 JUMP JUMPDEST DUP3 PUSH2 0xC5E SWAP2 SWAP1 PUSH2 0x10CB JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDA0 SWAP1 PUSH2 0x1238 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF4 DUP2 PUSH2 0xDDF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE0F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE2D DUP2 PUSH2 0xE1A JUMP JUMPDEST DUP2 EQ PUSH2 0xE38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE4A DUP2 PUSH2 0xE24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE66 JUMPI PUSH2 0xE65 PUSH2 0xE15 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE74 DUP5 DUP3 DUP6 ADD PUSH2 0xE3B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA8 DUP3 PUSH2 0xE7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEB8 DUP2 PUSH2 0xE9D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xED3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEE2 DUP2 PUSH2 0xE1A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEFD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xED9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF0C DUP2 PUSH2 0xE9D JUMP JUMPDEST DUP2 EQ PUSH2 0xF17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF29 DUP2 PUSH2 0xF03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF45 JUMPI PUSH2 0xF44 PUSH2 0xE15 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF53 DUP5 DUP3 DUP6 ADD PUSH2 0xF1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0xF71 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0xED9 JUMP JUMPDEST PUSH2 0xF7E PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xED9 JUMP JUMPDEST PUSH2 0xF8B PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xED9 JUMP JUMPDEST PUSH2 0xF98 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xED9 JUMP JUMPDEST PUSH2 0xFA5 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xED9 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xFC4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xEAF JUMP JUMPDEST PUSH2 0xFD1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xED9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xFE1 DUP2 PUSH2 0xDDF JUMP JUMPDEST DUP2 EQ PUSH2 0xFEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xFFE DUP2 PUSH2 0xFD8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x101A JUMPI PUSH2 0x1019 PUSH2 0xE15 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1028 DUP5 DUP3 DUP6 ADD PUSH2 0xFEF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x106B DUP3 PUSH2 0xE1A JUMP JUMPDEST SWAP2 POP PUSH2 0x1076 DUP4 PUSH2 0xE1A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1089 JUMPI PUSH2 0x1088 PUSH2 0x1031 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x10A9 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xEAF JUMP JUMPDEST PUSH2 0x10B6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xEAF JUMP JUMPDEST PUSH2 0x10C3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xED9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D6 DUP3 PUSH2 0xE1A JUMP JUMPDEST SWAP2 POP PUSH2 0x10E1 DUP4 PUSH2 0xE1A JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x111A JUMPI PUSH2 0x1119 PUSH2 0x1031 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x115F DUP3 PUSH2 0xE1A JUMP JUMPDEST SWAP2 POP PUSH2 0x116A DUP4 PUSH2 0xE1A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x117A JUMPI PUSH2 0x1179 PUSH2 0x1125 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1190 DUP3 PUSH2 0xE1A JUMP JUMPDEST SWAP2 POP PUSH2 0x119B DUP4 PUSH2 0xE1A JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x11D0 JUMPI PUSH2 0x11CF PUSH2 0x1031 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F74206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1222 PUSH1 0x9 DUP4 PUSH2 0x11DB JUMP JUMPDEST SWAP2 POP PUSH2 0x122D DUP3 PUSH2 0x11EC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1251 DUP2 PUSH2 0x1215 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 SWAP16 RETURN SWAP2 0xCD SWAP10 0x4C PUSH9 0xAA4379A7EF36273628 SLOAD PUSH25 0x6D4078C8243D5CA32F6E45A8B364736F6C634300080F003300 ",
							"sourceMap": "732:4584:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2682:351;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2032:642;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;849:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3041:602;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3992:287;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4287:171;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;793:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1332:40;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;908:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1932:92;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;878:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;817:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2682:351;2719:4;2743:10;;;;;;;;;;;2736:27;;;2764:10;2776:8;:20;2785:10;2776:20;;;;;;;;;;;;;;;:32;;;2736:73;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2837:10;2828:54;;;2849:8;:20;2858:10;2849:20;;;;;;;;;;;;;;;:32;;;2828:54;;;;;;:::i;:::-;;;;;;;;2922:8;:20;2931:10;2922:20;;;;;;;;;;;;;;;:32;;;2907:11;;:47;;;;;;;:::i;:::-;;;;;;;;3000:1;2965:8;:20;2974:10;2965:20;;;;;;;;;;;;;;;:32;;:36;;;;3021:4;3014:11;;2682:351;:::o;2032:642::-;2077:4;2102:10;;;;;;;;;;;2095:31;;;2127:10;2147:4;2154:7;2095:67;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2209:4;2181:43;;2189:10;2181:43;;;2216:7;2181:43;;;;;;:::i;:::-;;;;;;;;2389:8;2382:3;2375:5;;2340:8;:20;2349:10;2340:20;;;;;;;;;;;;;;;:32;;;:40;;;;:::i;:::-;:45;;;;:::i;:::-;2339:58;;;;:::i;:::-;2298:8;:20;2307:10;2298:20;;;;;;;;;;;;;;;:36;;;2280:15;:54;;;;:::i;:::-;2279:119;;;;:::i;:::-;2237:8;:20;2246:10;2237:20;;;;;;;;;;;;;;;:39;;:161;;;;2447:7;2411:8;:20;2420:10;2411:20;;;;;;;;;;;;;;;:32;;;:43;;;;;;;:::i;:::-;;;;;;;;2504:15;2465:8;:20;2474:10;2465:20;;;;;;;;;;;;;;;:36;;:54;;;;2545:7;2530:11;;:22;;;;;;;:::i;:::-;;;;;;;;2604:8;:20;2613:10;2604:20;;;;;;;;;;;;;;;:36;;;2563:8;:20;2572:10;2563:20;;;;;;;;;;;;;;;:38;;:77;;;;2658:4;2651:11;;2032:642;;;:::o;849:22::-;;;;;;;;;;;;;:::o;3041:602::-;3076:4;3280:8;3273:3;3266:5;;3231:8;:20;3240:10;3231:20;;;;;;;;;;;;;;;:32;;;:40;;;;:::i;:::-;:45;;;;:::i;:::-;3230:58;;;;:::i;:::-;3189:8;:20;3198:10;3189:20;;;;;;;;;;;;;;;:36;;;3171:15;:54;;;;:::i;:::-;3170:119;;;;:::i;:::-;3128:8;:20;3137:10;3128:20;;;;;;;;;;;;;;;:39;;;:161;;;;:::i;:::-;3093:8;:20;3102:10;3093:20;;;;;;;;;;;;;;;:32;;:196;;;;3307:7;;;;;;;;;;;3300:24;;;3325:10;3337:8;:20;3346:10;3337:20;;;;;;;;;;;;;;;:32;;;3300:70;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3398:10;3389:54;;;3410:8;:20;3419:10;3410:20;;;;;;;;;;;;;;;:32;;;3389:54;;;;;;:::i;:::-;;;;;;;;3491:1;3456:8;:20;3465:10;3456:20;;;;;;;;;;;;;;;:32;;:36;;;;3545:1;3503:8;:20;3512:10;3503:20;;;;;;;;;;;;;;;:39;;:43;;;;3598:15;3557:8;:20;3566:10;3557:20;;;;;;;;;;;;;;;:38;;:56;;;;3631:4;3624:11;;3041:602;:::o;3992:287::-;4040:4;4057:12;4090:8;:20;4099:10;4090:20;;;;;;;;;;;;;;;:38;;;4072:15;:56;;;;:::i;:::-;4057:71;;4139:22;4225:8;4218:3;4211:5;;4176:8;:20;4185:10;4176:20;;;;;;;;;;;;;;;:32;;;:40;;;;:::i;:::-;:45;;;;:::i;:::-;4175:58;;;;:::i;:::-;4164:7;:70;;;;:::i;:::-;4139:95;;4252:17;4245:24;;;;3992:287;:::o;4287:171::-;4334:4;4351:22;4376:8;:20;4385:10;4376:20;;;;;;;;;;;;;;;:39;;;4351:64;;4433:17;4426:24;;;4287:171;:::o;793:17::-;;;;:::o;1332:40::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;908:20::-;;;;;;;;;;;;;:::o;1932:92::-;1781:5;;;;;;;;;;;1767:19;;:10;:19;;;1759:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;2005:6:::1;1997:5;:14;;;;1932:92:::0;:::o;878:23::-;;;;:::o;817:25::-;;;;;;;;;;;;;:::o;7:90:1:-;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o;515:117::-;624:1;621;614:12;761:77;798:7;827:5;816:16;;761:77;;;:::o;844:122::-;917:24;935:5;917:24;:::i;:::-;910:5;907:35;897:63;;956:1;953;946:12;897:63;844:122;:::o;972:139::-;1018:5;1056:6;1043:20;1034:29;;1072:33;1099:5;1072:33;:::i;:::-;972:139;;;;:::o;1117:329::-;1176:6;1225:2;1213:9;1204:7;1200:23;1196:32;1193:119;;;1231:79;;:::i;:::-;1193:119;1351:1;1376:53;1421:7;1412:6;1401:9;1397:22;1376:53;:::i;:::-;1366:63;;1322:117;1117:329;;;;:::o;1452:126::-;1489:7;1529:42;1522:5;1518:54;1507:65;;1452:126;;;:::o;1584:96::-;1621:7;1650:24;1668:5;1650:24;:::i;:::-;1639:35;;1584:96;;;:::o;1686:118::-;1773:24;1791:5;1773:24;:::i;:::-;1768:3;1761:37;1686:118;;:::o;1810:222::-;1903:4;1941:2;1930:9;1926:18;1918:26;;1954:71;2022:1;2011:9;2007:17;1998:6;1954:71;:::i;:::-;1810:222;;;;:::o;2038:118::-;2125:24;2143:5;2125:24;:::i;:::-;2120:3;2113:37;2038:118;;:::o;2162:222::-;2255:4;2293:2;2282:9;2278:18;2270:26;;2306:71;2374:1;2363:9;2359:17;2350:6;2306:71;:::i;:::-;2162:222;;;;:::o;2390:122::-;2463:24;2481:5;2463:24;:::i;:::-;2456:5;2453:35;2443:63;;2502:1;2499;2492:12;2443:63;2390:122;:::o;2518:139::-;2564:5;2602:6;2589:20;2580:29;;2618:33;2645:5;2618:33;:::i;:::-;2518:139;;;;:::o;2663:329::-;2722:6;2771:2;2759:9;2750:7;2746:23;2742:32;2739:119;;;2777:79;;:::i;:::-;2739:119;2897:1;2922:53;2967:7;2958:6;2947:9;2943:22;2922:53;:::i;:::-;2912:63;;2868:117;2663:329;;;;:::o;2998:664::-;3203:4;3241:3;3230:9;3226:19;3218:27;;3255:71;3323:1;3312:9;3308:17;3299:6;3255:71;:::i;:::-;3336:72;3404:2;3393:9;3389:18;3380:6;3336:72;:::i;:::-;3418;3486:2;3475:9;3471:18;3462:6;3418:72;:::i;:::-;3500;3568:2;3557:9;3553:18;3544:6;3500:72;:::i;:::-;3582:73;3650:3;3639:9;3635:19;3626:6;3582:73;:::i;:::-;2998:664;;;;;;;;:::o;3668:332::-;3789:4;3827:2;3816:9;3812:18;3804:26;;3840:71;3908:1;3897:9;3893:17;3884:6;3840:71;:::i;:::-;3921:72;3989:2;3978:9;3974:18;3965:6;3921:72;:::i;:::-;3668:332;;;;;:::o;4006:116::-;4076:21;4091:5;4076:21;:::i;:::-;4069:5;4066:32;4056:60;;4112:1;4109;4102:12;4056:60;4006:116;:::o;4128:137::-;4182:5;4213:6;4207:13;4198:22;;4229:30;4253:5;4229:30;:::i;:::-;4128:137;;;;:::o;4271:345::-;4338:6;4387:2;4375:9;4366:7;4362:23;4358:32;4355:119;;;4393:79;;:::i;:::-;4355:119;4513:1;4538:61;4591:7;4582:6;4571:9;4567:22;4538:61;:::i;:::-;4528:71;;4484:125;4271:345;;;;:::o;4622:180::-;4670:77;4667:1;4660:88;4767:4;4764:1;4757:15;4791:4;4788:1;4781:15;4808:191;4848:4;4868:20;4886:1;4868:20;:::i;:::-;4863:25;;4902:20;4920:1;4902:20;:::i;:::-;4897:25;;4941:1;4938;4935:8;4932:34;;;4946:18;;:::i;:::-;4932:34;4991:1;4988;4984:9;4976:17;;4808:191;;;;:::o;5005:442::-;5154:4;5192:2;5181:9;5177:18;5169:26;;5205:71;5273:1;5262:9;5258:17;5249:6;5205:71;:::i;:::-;5286:72;5354:2;5343:9;5339:18;5330:6;5286:72;:::i;:::-;5368;5436:2;5425:9;5421:18;5412:6;5368:72;:::i;:::-;5005:442;;;;;;:::o;5453:348::-;5493:7;5516:20;5534:1;5516:20;:::i;:::-;5511:25;;5550:20;5568:1;5550:20;:::i;:::-;5545:25;;5738:1;5670:66;5666:74;5663:1;5660:81;5655:1;5648:9;5641:17;5637:105;5634:131;;;5745:18;;:::i;:::-;5634:131;5793:1;5790;5786:9;5775:20;;5453:348;;;;:::o;5807:180::-;5855:77;5852:1;5845:88;5952:4;5949:1;5942:15;5976:4;5973:1;5966:15;5993:185;6033:1;6050:20;6068:1;6050:20;:::i;:::-;6045:25;;6084:20;6102:1;6084:20;:::i;:::-;6079:25;;6123:1;6113:35;;6128:18;;:::i;:::-;6113:35;6170:1;6167;6163:9;6158:14;;5993:185;;;;:::o;6184:305::-;6224:3;6243:20;6261:1;6243:20;:::i;:::-;6238:25;;6277:20;6295:1;6277:20;:::i;:::-;6272:25;;6431:1;6363:66;6359:74;6356:1;6353:81;6350:107;;;6437:18;;:::i;:::-;6350:107;6481:1;6478;6474:9;6467:16;;6184:305;;;;:::o;6495:169::-;6579:11;6613:6;6608:3;6601:19;6653:4;6648:3;6644:14;6629:29;;6495:169;;;;:::o;6670:159::-;6810:11;6806:1;6798:6;6794:14;6787:35;6670:159;:::o;6835:365::-;6977:3;6998:66;7062:1;7057:3;6998:66;:::i;:::-;6991:73;;7073:93;7162:3;7073:93;:::i;:::-;7191:2;7186:3;7182:12;7175:19;;6835:365;;;:::o;7206:419::-;7372:4;7410:2;7399:9;7395:18;7387:26;;7459:9;7453:4;7449:20;7445:1;7434:9;7430:17;7423:47;7487:131;7613:4;7487:131;:::i;:::-;7479:139;;7206:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "950000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Stake(uint256)": "infinite",
								"User_Map(address)": "infinite",
								"harvest()": "infinite",
								"lastTotokenRatio()": "2656",
								"newTotokenRatio()": "infinite",
								"owner()": "2558",
								"ratio()": "2429",
								"setRatio(uint256)": "24756",
								"stakeSupple()": "2517",
								"staketoken()": "2624",
								"totoken()": "2559",
								"withDraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 732,
									"end": 5316,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 732,
									"end": 5316,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 732,
									"end": 5316,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1381,
									"end": 1719,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1452,
									"end": 1462,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1444,
									"end": 1449,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1444,
									"end": 1449,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1444,
									"end": 1462,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1444,
									"end": 1462,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1444,
									"end": 1462,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1444,
									"end": 1462,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1444,
									"end": 1462,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1444,
									"end": 1462,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1444,
									"end": 1462,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1444,
									"end": 1462,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1444,
									"end": 1462,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1444,
									"end": 1462,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1444,
									"end": 1462,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1444,
									"end": 1462,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1444,
									"end": 1462,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1444,
									"end": 1462,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1444,
									"end": 1462,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1444,
									"end": 1462,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1444,
									"end": 1462,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1444,
									"end": 1462,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1504,
									"end": 1505,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1481,
									"end": 1506,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1481,
									"end": 1506,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1481,
									"end": 1492,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1481,
									"end": 1506,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1481,
									"end": 1506,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1481,
									"end": 1506,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1473,
									"end": 1526,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1473,
									"end": 1526,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1565,
									"end": 1566,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1545,
									"end": 1567,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1545,
									"end": 1567,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1545,
									"end": 1553,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1545,
									"end": 1567,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1545,
									"end": 1567,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1545,
									"end": 1567,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1537,
									"end": 1587,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1537,
									"end": 1587,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1537,
									"end": 1587,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1537,
									"end": 1587,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1537,
									"end": 1587,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1537,
									"end": 1587,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1537,
									"end": 1587,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1537,
									"end": 1587,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1537,
									"end": 1587,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1537,
									"end": 1587,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1537,
									"end": 1587,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1537,
									"end": 1587,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1537,
									"end": 1587,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1537,
									"end": 1587,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1537,
									"end": 1587,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1537,
									"end": 1587,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1537,
									"end": 1587,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1537,
									"end": 1587,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1537,
									"end": 1587,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1537,
									"end": 1587,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1537,
									"end": 1587,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1537,
									"end": 1587,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1537,
									"end": 1587,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1537,
									"end": 1587,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1621,
									"end": 1629,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1606,
									"end": 1629,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1606,
									"end": 1629,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1606,
									"end": 1617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1606,
									"end": 1629,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1606,
									"end": 1629,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1606,
									"end": 1629,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1598,
									"end": 1647,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1598,
									"end": 1647,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1598,
									"end": 1647,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1598,
									"end": 1647,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1598,
									"end": 1647,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1598,
									"end": 1647,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1598,
									"end": 1647,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1598,
									"end": 1647,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1598,
									"end": 1647,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1598,
									"end": 1647,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1598,
									"end": 1647,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1598,
									"end": 1647,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1598,
									"end": 1647,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1598,
									"end": 1647,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1598,
									"end": 1647,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1598,
									"end": 1647,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1598,
									"end": 1647,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1598,
									"end": 1647,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1598,
									"end": 1647,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1598,
									"end": 1647,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1598,
									"end": 1647,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1598,
									"end": 1647,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1598,
									"end": 1647,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1598,
									"end": 1647,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1671,
									"end": 1682,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1658,
									"end": 1668,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1658,
									"end": 1668,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1658,
									"end": 1682,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1658,
									"end": 1682,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1658,
									"end": 1682,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1658,
									"end": 1682,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1658,
									"end": 1682,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1658,
									"end": 1682,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1658,
									"end": 1682,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1658,
									"end": 1682,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1658,
									"end": 1682,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1658,
									"end": 1682,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1658,
									"end": 1682,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1658,
									"end": 1682,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1658,
									"end": 1682,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1658,
									"end": 1682,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1658,
									"end": 1682,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1658,
									"end": 1682,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1658,
									"end": 1682,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1658,
									"end": 1682,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1703,
									"end": 1711,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1693,
									"end": 1700,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1693,
									"end": 1700,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1693,
									"end": 1711,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1693,
									"end": 1711,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1693,
									"end": 1711,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1693,
									"end": 1711,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1693,
									"end": 1711,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1693,
									"end": 1711,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1693,
									"end": 1711,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1693,
									"end": 1711,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1693,
									"end": 1711,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1693,
									"end": 1711,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1693,
									"end": 1711,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1693,
									"end": 1711,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1693,
									"end": 1711,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1693,
									"end": 1711,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1693,
									"end": 1711,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1693,
									"end": 1711,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1693,
									"end": 1711,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1693,
									"end": 1711,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1719,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 732,
									"end": 5316,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 732,
									"end": 5316,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 1527,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1358,
									"end": 1527,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1442,
									"end": 1453,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1476,
									"end": 1482,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1474,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1464,
									"end": 1483,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1516,
									"end": 1520,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1511,
									"end": 1514,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1507,
									"end": 1521,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1492,
									"end": 1521,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1492,
									"end": 1521,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 1527,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 1527,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 1527,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 1527,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 1527,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1533,
									"end": 1699,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1533,
									"end": 1699,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1673,
									"end": 1691,
									"name": "PUSH",
									"source": 1,
									"value": "4E4F542C53203058204144445245535300000000000000000000000000000000"
								},
								{
									"begin": 1669,
									"end": 1670,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1661,
									"end": 1667,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1657,
									"end": 1671,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1650,
									"end": 1692,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1533,
									"end": 1699,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1533,
									"end": 1699,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1705,
									"end": 2071,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1705,
									"end": 2071,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1847,
									"end": 1850,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1868,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1932,
									"end": 1934,
									"name": "PUSH",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1927,
									"end": 1930,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1868,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1868,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1868,
									"end": 1935,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1868,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1861,
									"end": 1935,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1861,
									"end": 1935,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1944,
									"end": 2037,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 2033,
									"end": 2036,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1944,
									"end": 2037,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1944,
									"end": 2037,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1944,
									"end": 2037,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1944,
									"end": 2037,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2062,
									"end": 2064,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2057,
									"end": 2060,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2053,
									"end": 2065,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2065,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2065,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1705,
									"end": 2071,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1705,
									"end": 2071,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1705,
									"end": 2071,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1705,
									"end": 2071,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2077,
									"end": 2496,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2077,
									"end": 2496,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2243,
									"end": 2247,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2281,
									"end": 2283,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2270,
									"end": 2279,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2266,
									"end": 2284,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2258,
									"end": 2284,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2258,
									"end": 2284,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2330,
									"end": 2339,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2324,
									"end": 2328,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2320,
									"end": 2340,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2316,
									"end": 2317,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2305,
									"end": 2314,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2301,
									"end": 2318,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2294,
									"end": 2341,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2358,
									"end": 2489,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 2484,
									"end": 2488,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2358,
									"end": 2489,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2358,
									"end": 2489,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2358,
									"end": 2489,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 2358,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2350,
									"end": 2489,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2350,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2077,
									"end": 2496,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2077,
									"end": 2496,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2077,
									"end": 2496,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2077,
									"end": 2496,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2502,
									"end": 2666,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 2502,
									"end": 2666,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2642,
									"end": 2658,
									"name": "PUSH",
									"source": 1,
									"value": "4E4545442061677265656D656E74000000000000000000000000000000000000"
								},
								{
									"begin": 2638,
									"end": 2639,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2630,
									"end": 2636,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2640,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2619,
									"end": 2659,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2502,
									"end": 2666,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2502,
									"end": 2666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 3038,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 2672,
									"end": 3038,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2814,
									"end": 2817,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2835,
									"end": 2902,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 2899,
									"end": 2901,
									"name": "PUSH",
									"source": 1,
									"value": "E"
								},
								{
									"begin": 2894,
									"end": 2897,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2835,
									"end": 2902,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 2835,
									"end": 2902,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2835,
									"end": 2902,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 2835,
									"end": 2902,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2828,
									"end": 2902,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2828,
									"end": 2902,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2911,
									"end": 3004,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 3000,
									"end": 3003,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2911,
									"end": 3004,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 2911,
									"end": 3004,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2911,
									"end": 3004,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 2911,
									"end": 3004,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3029,
									"end": 3031,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3024,
									"end": 3027,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3032,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3013,
									"end": 3032,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3013,
									"end": 3032,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 3038,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 3038,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 3038,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 3038,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3044,
									"end": 3463,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 3044,
									"end": 3463,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3210,
									"end": 3214,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3248,
									"end": 3250,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3237,
									"end": 3246,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3233,
									"end": 3251,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3225,
									"end": 3251,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3225,
									"end": 3251,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3297,
									"end": 3306,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3291,
									"end": 3295,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3287,
									"end": 3307,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3283,
									"end": 3284,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3272,
									"end": 3281,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3268,
									"end": 3285,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3261,
									"end": 3308,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3325,
									"end": 3456,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 3451,
									"end": 3455,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3325,
									"end": 3456,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 3325,
									"end": 3456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3325,
									"end": 3456,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 3325,
									"end": 3456,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3317,
									"end": 3456,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3317,
									"end": 3456,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3044,
									"end": 3463,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3044,
									"end": 3463,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3044,
									"end": 3463,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3044,
									"end": 3463,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 732,
									"end": 5316,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 732,
									"end": 5316,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 732,
									"end": 5316,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 732,
									"end": 5316,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 732,
									"end": 5316,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 732,
									"end": 5316,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 732,
									"end": 5316,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 732,
									"end": 5316,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 732,
									"end": 5316,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c49ff391cd994c68aa4379a7ef3627362854786d4078c8243d5ca32f6e45a8b364736f6c634300080f0033",
									".code": [
										{
											"begin": 732,
											"end": 5316,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "PUSH",
											"source": 0,
											"value": "71CA337D"
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "PUSH",
											"source": 0,
											"value": "71CA337D"
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "PUSH",
											"source": 0,
											"value": "8C93ECFF"
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "PUSH",
											"source": 0,
											"value": "B2237BA3"
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "PUSH",
											"source": 0,
											"value": "D942727F"
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "PUSH",
											"source": 0,
											"value": "DAB2997B"
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "PUSH",
											"source": 0,
											"value": "FDB1C10"
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "PUSH",
											"source": 0,
											"value": "227A473B"
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "PUSH",
											"source": 0,
											"value": "2C46502D"
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "PUSH",
											"source": 0,
											"value": "4641257D"
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "PUSH",
											"source": 0,
											"value": "529ACA49"
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "PUSH",
											"source": 0,
											"value": "5E9F4435"
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 5316,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2682,
											"end": 3033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2682,
											"end": 3033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2032,
											"end": 2674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2032,
											"end": 2674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2032,
											"end": 2674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 849,
											"end": 871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 849,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 849,
											"end": 871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 849,
											"end": 871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 849,
											"end": 871,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 849,
											"end": 871,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 849,
											"end": 871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 849,
											"end": 871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 849,
											"end": 871,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3041,
											"end": 3643,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3041,
											"end": 3643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3041,
											"end": 3643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3041,
											"end": 3643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3041,
											"end": 3643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3041,
											"end": 3643,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3041,
											"end": 3643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3041,
											"end": 3643,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3041,
											"end": 3643,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3041,
											"end": 3643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3041,
											"end": 3643,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3041,
											"end": 3643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3041,
											"end": 3643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3041,
											"end": 3643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3041,
											"end": 3643,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3041,
											"end": 3643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3041,
											"end": 3643,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3041,
											"end": 3643,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3041,
											"end": 3643,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3041,
											"end": 3643,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3041,
											"end": 3643,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3041,
											"end": 3643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3041,
											"end": 3643,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4279,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3992,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3992,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3992,
											"end": 4279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4279,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3992,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4279,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3992,
											"end": 4279,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3992,
											"end": 4279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3992,
											"end": 4279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4279,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3992,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4279,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3992,
											"end": 4279,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4279,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4458,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4287,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4287,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4287,
											"end": 4458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4458,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4287,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4287,
											"end": 4458,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4287,
											"end": 4458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4287,
											"end": 4458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4458,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4287,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4287,
											"end": 4458,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4458,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4458,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 793,
											"end": 810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1332,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1332,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1332,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 908,
											"end": 928,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 908,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 908,
											"end": 928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 908,
											"end": 928,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 908,
											"end": 928,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 908,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 908,
											"end": 928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 908,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 908,
											"end": 928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 908,
											"end": 928,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 908,
											"end": 928,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 908,
											"end": 928,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 908,
											"end": 928,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 908,
											"end": 928,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 908,
											"end": 928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 908,
											"end": 928,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 2024,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1932,
											"end": 2024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 2024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1932,
											"end": 2024,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1932,
											"end": 2024,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 2024,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 2024,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 2024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 2024,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 2024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 2024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1932,
											"end": 2024,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 2024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 2024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1932,
											"end": 2024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 2024,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1932,
											"end": 2024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 2024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1932,
											"end": 2024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 2024,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1932,
											"end": 2024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 2024,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 878,
											"end": 901,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 878,
											"end": 901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 878,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 878,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 878,
											"end": 901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 878,
											"end": 901,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 878,
											"end": 901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 878,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 878,
											"end": 901,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 878,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 878,
											"end": 901,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 878,
											"end": 901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 878,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 878,
											"end": 901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 878,
											"end": 901,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 878,
											"end": 901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 878,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 878,
											"end": 901,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 878,
											"end": 901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 878,
											"end": 901,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 878,
											"end": 901,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 878,
											"end": 901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 878,
											"end": 901,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 817,
											"end": 842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 817,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 817,
											"end": 842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 817,
											"end": 842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 842,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 817,
											"end": 842,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 817,
											"end": 842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 817,
											"end": 842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 842,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2719,
											"end": 2723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2743,
											"end": 2753,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2743,
											"end": 2753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2743,
											"end": 2753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2743,
											"end": 2753,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2743,
											"end": 2753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2743,
											"end": 2753,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2743,
											"end": 2753,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2743,
											"end": 2753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2743,
											"end": 2753,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2743,
											"end": 2753,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2743,
											"end": 2753,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2763,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2736,
											"end": 2763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2763,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 2764,
											"end": 2774,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2784,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2776,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2785,
											"end": 2795,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2776,
											"end": 2796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2776,
											"end": 2796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2776,
											"end": 2796,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2776,
											"end": 2796,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2776,
											"end": 2796,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2776,
											"end": 2808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2808,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2736,
											"end": 2809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2736,
											"end": 2809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2809,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2837,
											"end": 2847,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2828,
											"end": 2882,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2828,
											"end": 2882,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2828,
											"end": 2882,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB2AB09EB219583F4A59A5D0623ADE346D962BCD4E46B11DA047C9049B"
										},
										{
											"begin": 2849,
											"end": 2857,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2849,
											"end": 2869,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2858,
											"end": 2868,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2869,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2849,
											"end": 2869,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2869,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2849,
											"end": 2869,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2869,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2849,
											"end": 2869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2869,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2849,
											"end": 2869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2869,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2869,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2881,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2828,
											"end": 2882,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2828,
											"end": 2882,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2828,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2828,
											"end": 2882,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2828,
											"end": 2882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2828,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2828,
											"end": 2882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2828,
											"end": 2882,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2828,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2828,
											"end": 2882,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2828,
											"end": 2882,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2828,
											"end": 2882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2828,
											"end": 2882,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2828,
											"end": 2882,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2828,
											"end": 2882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2828,
											"end": 2882,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 2930,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2922,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2931,
											"end": 2941,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2922,
											"end": 2942,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2922,
											"end": 2942,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 2942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 2942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2922,
											"end": 2942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 2942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 2942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 2942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2922,
											"end": 2942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2942,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 2954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 2954,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2918,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2907,
											"end": 2918,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2907,
											"end": 2954,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2954,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2954,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2907,
											"end": 2954,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2907,
											"end": 2954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2954,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2907,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2954,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2954,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3000,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2965,
											"end": 2973,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2965,
											"end": 2985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2974,
											"end": 2984,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2985,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2965,
											"end": 2985,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2985,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2965,
											"end": 2985,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2985,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2985,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2965,
											"end": 2985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2985,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2985,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2965,
											"end": 2985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2965,
											"end": 2985,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2965,
											"end": 2997,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 3001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 3001,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 3001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3025,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3014,
											"end": 3025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2682,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2682,
											"end": 3033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2081,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2102,
											"end": 2112,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2102,
											"end": 2112,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2102,
											"end": 2112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2112,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2112,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2102,
											"end": 2112,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2112,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2112,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2102,
											"end": 2112,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2126,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2095,
											"end": 2126,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2126,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 2127,
											"end": 2137,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2151,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2161,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2095,
											"end": 2162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2095,
											"end": 2162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2209,
											"end": 2213,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2224,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2181,
											"end": 2224,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2199,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2224,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2181,
											"end": 2224,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2224,
											"name": "PUSH",
											"source": 0,
											"value": "1FD6EBB971D137ACF3F01670862B8A96758CFC7E39DCCB093E68DAF461B0262C"
										},
										{
											"begin": 2216,
											"end": 2223,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2181,
											"end": 2224,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2181,
											"end": 2224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2181,
											"end": 2224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2224,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2181,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2181,
											"end": 2224,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2224,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2224,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2397,
											"name": "PUSH",
											"source": 0,
											"value": "1E13380"
										},
										{
											"begin": 2382,
											"end": 2385,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2375,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2380,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2348,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2340,
											"end": 2360,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2349,
											"end": 2359,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2360,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2340,
											"end": 2360,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2360,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2340,
											"end": 2360,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2360,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2360,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2340,
											"end": 2360,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2360,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2360,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2340,
											"end": 2360,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2360,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2340,
											"end": 2360,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2340,
											"end": 2372,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2372,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2340,
											"end": 2380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2340,
											"end": 2380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2340,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2340,
											"end": 2385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2340,
											"end": 2385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2385,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2340,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2339,
											"end": 2397,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2339,
											"end": 2397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2397,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2339,
											"end": 2397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2306,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2298,
											"end": 2318,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2307,
											"end": 2317,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2318,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2298,
											"end": 2318,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2318,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2298,
											"end": 2318,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2318,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2298,
											"end": 2318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2318,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2298,
											"end": 2318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2318,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2298,
											"end": 2318,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2334,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2298,
											"end": 2334,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2334,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2295,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2280,
											"end": 2334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2280,
											"end": 2334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2279,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2279,
											"end": 2398,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2279,
											"end": 2398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2279,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2279,
											"end": 2398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2279,
											"end": 2398,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2279,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2237,
											"end": 2257,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2246,
											"end": 2256,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2257,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2237,
											"end": 2257,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2257,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2237,
											"end": 2257,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2257,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2257,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2257,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2257,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2257,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2257,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2257,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2257,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2276,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2237,
											"end": 2276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2398,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2398,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2419,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2411,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2420,
											"end": 2430,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2411,
											"end": 2431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2411,
											"end": 2431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2431,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2411,
											"end": 2431,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2431,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2411,
											"end": 2431,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2411,
											"end": 2431,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2411,
											"end": 2443,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2411,
											"end": 2454,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2454,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2454,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2411,
											"end": 2454,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2411,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2454,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2411,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2454,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2454,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2519,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2473,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2474,
											"end": 2484,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2501,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2465,
											"end": 2501,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2519,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2545,
											"end": 2552,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2541,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2530,
											"end": 2541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2530,
											"end": 2552,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2552,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2552,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2530,
											"end": 2552,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2530,
											"end": 2552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2552,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2530,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2552,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2552,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2552,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2552,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2552,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2552,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2604,
											"end": 2624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2613,
											"end": 2623,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2624,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2604,
											"end": 2624,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2624,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2604,
											"end": 2624,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2624,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2604,
											"end": 2624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2624,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2604,
											"end": 2624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2604,
											"end": 2624,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2571,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2563,
											"end": 2583,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2582,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2583,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2563,
											"end": 2583,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2583,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2563,
											"end": 2583,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2583,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2583,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2563,
											"end": 2583,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2583,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2583,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2563,
											"end": 2583,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2583,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2563,
											"end": 2583,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2601,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2563,
											"end": 2601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2640,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2662,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2651,
											"end": 2662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2662,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 849,
											"end": 871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 849,
											"end": 871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 849,
											"end": 871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 849,
											"end": 871,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 849,
											"end": 871,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 849,
											"end": 871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3041,
											"end": 3643,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3041,
											"end": 3643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3080,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3280,
											"end": 3288,
											"name": "PUSH",
											"source": 0,
											"value": "1E13380"
										},
										{
											"begin": 3273,
											"end": 3276,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3266,
											"end": 3271,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3266,
											"end": 3271,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3239,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3231,
											"end": 3251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3240,
											"end": 3250,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3251,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3231,
											"end": 3251,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3251,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3231,
											"end": 3251,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3251,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3251,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3231,
											"end": 3251,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3251,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3251,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3231,
											"end": 3251,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3231,
											"end": 3251,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3231,
											"end": 3263,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3263,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3231,
											"end": 3271,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3231,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3271,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3231,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3231,
											"end": 3276,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3231,
											"end": 3276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3276,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3231,
											"end": 3276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3230,
											"end": 3288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3230,
											"end": 3288,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3230,
											"end": 3288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3230,
											"end": 3288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3230,
											"end": 3288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3230,
											"end": 3288,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3230,
											"end": 3288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3189,
											"end": 3197,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3189,
											"end": 3209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3198,
											"end": 3208,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3189,
											"end": 3209,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3189,
											"end": 3209,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3189,
											"end": 3209,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3189,
											"end": 3209,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3189,
											"end": 3209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3189,
											"end": 3209,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3189,
											"end": 3209,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3189,
											"end": 3209,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3189,
											"end": 3209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3189,
											"end": 3209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3189,
											"end": 3209,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3189,
											"end": 3209,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3189,
											"end": 3209,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3189,
											"end": 3209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3189,
											"end": 3209,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3189,
											"end": 3225,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3189,
											"end": 3225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3189,
											"end": 3225,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3186,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3171,
											"end": 3225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3171,
											"end": 3225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3225,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3171,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3170,
											"end": 3289,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 3289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3170,
											"end": 3289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 3289,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3170,
											"end": 3289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3136,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3137,
											"end": 3147,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3167,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3128,
											"end": 3167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3167,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3128,
											"end": 3289,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3128,
											"end": 3289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3289,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3128,
											"end": 3289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3101,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3093,
											"end": 3113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3102,
											"end": 3112,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3113,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3093,
											"end": 3113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3113,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3093,
											"end": 3113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3113,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3093,
											"end": 3113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3113,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3093,
											"end": 3113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3093,
											"end": 3113,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3125,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3093,
											"end": 3125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3289,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3289,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3289,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3307,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3307,
											"end": 3314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3314,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3307,
											"end": 3314,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3314,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3307,
											"end": 3314,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3324,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3300,
											"end": 3324,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3324,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 3325,
											"end": 3335,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3337,
											"end": 3345,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3337,
											"end": 3357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3346,
											"end": 3356,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3337,
											"end": 3357,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3337,
											"end": 3357,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3337,
											"end": 3357,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3337,
											"end": 3357,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3337,
											"end": 3357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3337,
											"end": 3357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3337,
											"end": 3357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3337,
											"end": 3357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3337,
											"end": 3357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3337,
											"end": 3357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3337,
											"end": 3357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3337,
											"end": 3357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3337,
											"end": 3357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3337,
											"end": 3357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3337,
											"end": 3357,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3337,
											"end": 3369,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3337,
											"end": 3369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3337,
											"end": 3369,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3300,
											"end": 3370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3300,
											"end": 3370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3398,
											"end": 3408,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3443,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3389,
											"end": 3443,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3443,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB2AB09EB219583F4A59A5D0623ADE346D962BCD4E46B11DA047C9049B"
										},
										{
											"begin": 3410,
											"end": 3418,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3429,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3410,
											"end": 3442,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3410,
											"end": 3442,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3410,
											"end": 3442,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3443,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3389,
											"end": 3443,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3389,
											"end": 3443,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3389,
											"end": 3443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3443,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3389,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3443,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3389,
											"end": 3443,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3443,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3443,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3443,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3443,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3456,
											"end": 3464,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3456,
											"end": 3476,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3465,
											"end": 3475,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3456,
											"end": 3476,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3456,
											"end": 3476,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3456,
											"end": 3476,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3456,
											"end": 3476,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3456,
											"end": 3476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3456,
											"end": 3476,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3456,
											"end": 3476,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3456,
											"end": 3476,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3456,
											"end": 3476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3456,
											"end": 3476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3456,
											"end": 3476,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3456,
											"end": 3476,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3456,
											"end": 3476,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3456,
											"end": 3476,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3456,
											"end": 3476,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3456,
											"end": 3488,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3456,
											"end": 3488,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3456,
											"end": 3492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3456,
											"end": 3492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3456,
											"end": 3492,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3456,
											"end": 3492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3503,
											"end": 3511,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3503,
											"end": 3523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3512,
											"end": 3522,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3523,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3503,
											"end": 3523,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3523,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3503,
											"end": 3523,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3503,
											"end": 3523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3503,
											"end": 3523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3503,
											"end": 3523,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3542,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3503,
											"end": 3542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3546,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3613,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 3557,
											"end": 3565,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3557,
											"end": 3577,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3566,
											"end": 3576,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3557,
											"end": 3577,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3557,
											"end": 3577,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3557,
											"end": 3577,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3557,
											"end": 3577,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3557,
											"end": 3577,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3557,
											"end": 3577,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3557,
											"end": 3577,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3557,
											"end": 3577,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3557,
											"end": 3577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3557,
											"end": 3577,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3557,
											"end": 3577,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3557,
											"end": 3577,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3557,
											"end": 3577,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3557,
											"end": 3577,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3557,
											"end": 3577,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3557,
											"end": 3595,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3557,
											"end": 3595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3557,
											"end": 3613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3557,
											"end": 3613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3557,
											"end": 3613,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3557,
											"end": 3613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3631,
											"end": 3635,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3624,
											"end": 3635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3041,
											"end": 3643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3041,
											"end": 3643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4279,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3992,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4040,
											"end": 4044,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4057,
											"end": 4069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4098,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4090,
											"end": 4110,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4099,
											"end": 4109,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4110,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4090,
											"end": 4110,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4110,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4090,
											"end": 4110,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4110,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4110,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4110,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4090,
											"end": 4110,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4110,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4110,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4110,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4090,
											"end": 4110,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4110,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4090,
											"end": 4110,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4128,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4090,
											"end": 4128,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4128,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4087,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4072,
											"end": 4128,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 4072,
											"end": 4128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4128,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4072,
											"end": 4128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4057,
											"end": 4128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4057,
											"end": 4128,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4161,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4225,
											"end": 4233,
											"name": "PUSH",
											"source": 0,
											"value": "1E13380"
										},
										{
											"begin": 4218,
											"end": 4221,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4211,
											"end": 4216,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4211,
											"end": 4216,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4176,
											"end": 4184,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4176,
											"end": 4196,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4185,
											"end": 4195,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4176,
											"end": 4196,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4176,
											"end": 4196,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4176,
											"end": 4196,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4176,
											"end": 4196,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4176,
											"end": 4196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4176,
											"end": 4196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4176,
											"end": 4196,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4176,
											"end": 4196,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4176,
											"end": 4196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4176,
											"end": 4196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4176,
											"end": 4196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4176,
											"end": 4196,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4176,
											"end": 4196,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4176,
											"end": 4196,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4176,
											"end": 4196,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4176,
											"end": 4208,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4176,
											"end": 4208,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4176,
											"end": 4208,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4176,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4176,
											"end": 4216,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4176,
											"end": 4216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4176,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4176,
											"end": 4216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4176,
											"end": 4216,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4176,
											"end": 4216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4176,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4176,
											"end": 4221,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4176,
											"end": 4221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4176,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4176,
											"end": 4221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4176,
											"end": 4221,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4176,
											"end": 4221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4175,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4175,
											"end": 4233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4175,
											"end": 4233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4175,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4175,
											"end": 4233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4175,
											"end": 4233,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4175,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4171,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4164,
											"end": 4234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4164,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4234,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4164,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4269,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4269,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4269,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4269,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4458,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4287,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4334,
											"end": 4338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4351,
											"end": 4373,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4384,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4376,
											"end": 4396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4385,
											"end": 4395,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4396,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4376,
											"end": 4396,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4396,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4376,
											"end": 4396,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4396,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4376,
											"end": 4396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4396,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4376,
											"end": 4396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4376,
											"end": 4396,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4415,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4376,
											"end": 4415,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4415,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4450,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4450,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 908,
											"end": 928,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 908,
											"end": 928,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 908,
											"end": 928,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 908,
											"end": 928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 908,
											"end": 928,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 908,
											"end": 928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 908,
											"end": 928,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 908,
											"end": 928,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 908,
											"end": 928,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 908,
											"end": 928,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 908,
											"end": 928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 2024,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1932,
											"end": 2024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1781,
											"end": 1786,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1781,
											"end": 1786,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1781,
											"end": 1786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1781,
											"end": 1786,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1781,
											"end": 1786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1781,
											"end": 1786,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1781,
											"end": 1786,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1781,
											"end": 1786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1781,
											"end": 1786,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1781,
											"end": 1786,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1781,
											"end": 1786,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1767,
											"end": 1786,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1767,
											"end": 1786,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1767,
											"end": 1777,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1767,
											"end": 1786,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1767,
											"end": 1786,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1767,
											"end": 1786,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1759,
											"end": 1801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1759,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2005,
											"end": 2011,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1997,
											"end": 2011,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2011,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2011,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2011,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 2024,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 2024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 878,
											"end": 901,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 878,
											"end": 901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 878,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 878,
											"end": 901,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 878,
											"end": 901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 878,
											"end": 901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 817,
											"end": 842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 842,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 817,
											"end": 842,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 842,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 817,
											"end": 842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 97,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 7,
											"end": 97,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 41,
											"end": 48,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 77,
											"end": 90,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 70,
											"end": 91,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 59,
											"end": 91,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 59,
											"end": 91,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 103,
											"end": 212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 199,
											"end": 204,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 184,
											"end": 205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 184,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 179,
											"end": 182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 172,
											"end": 206,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 218,
											"end": 428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 305,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 345,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 328,
											"end": 346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 320,
											"end": 346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 320,
											"end": 346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 416,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 403,
											"end": 420,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 394,
											"end": 400,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 356,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 356,
											"end": 421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 515,
											"end": 632,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 515,
											"end": 632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 624,
											"end": 625,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 621,
											"end": 622,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 614,
											"end": 626,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 761,
											"end": 838,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 761,
											"end": 838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 798,
											"end": 805,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 832,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 816,
											"end": 832,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 816,
											"end": 832,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 761,
											"end": 838,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 761,
											"end": 838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 761,
											"end": 838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 761,
											"end": 838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 844,
											"end": 966,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 844,
											"end": 966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 917,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 935,
											"end": 940,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 917,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 917,
											"end": 941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 917,
											"end": 941,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 917,
											"end": 941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 910,
											"end": 915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 907,
											"end": 942,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 897,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 897,
											"end": 960,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 956,
											"end": 957,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 954,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 946,
											"end": 958,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 897,
											"end": 960,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 897,
											"end": 960,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 844,
											"end": 966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 844,
											"end": 966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1111,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 972,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1056,
											"end": 1062,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1043,
											"end": 1063,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1034,
											"end": 1063,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1034,
											"end": 1063,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1072,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1099,
											"end": 1104,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1072,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1072,
											"end": 1105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1072,
											"end": 1105,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1072,
											"end": 1105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1111,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1111,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1111,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1111,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1117,
											"end": 1446,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1117,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1225,
											"end": 1227,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1213,
											"end": 1222,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1211,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1223,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1228,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1312,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1193,
											"end": 1312,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 1231,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1231,
											"end": 1310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1310,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 1231,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1312,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1193,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1352,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1376,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 1421,
											"end": 1428,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1418,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 1410,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1397,
											"end": 1419,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1376,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1429,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 1376,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1429,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1429,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1439,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1117,
											"end": 1446,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1117,
											"end": 1446,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1117,
											"end": 1446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1117,
											"end": 1446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1117,
											"end": 1446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1578,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 1452,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1489,
											"end": 1496,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1529,
											"end": 1571,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1522,
											"end": 1527,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1572,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1572,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1572,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1578,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1578,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1578,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1680,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 1584,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1650,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1668,
											"end": 1673,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 1650,
											"end": 1674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1674,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1650,
											"end": 1674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1639,
											"end": 1674,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1639,
											"end": 1674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1680,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1680,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1686,
											"end": 1804,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 1686,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1773,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1773,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 1773,
											"end": 1797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1773,
											"end": 1797,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1773,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 1771,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1686,
											"end": 1804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1686,
											"end": 1804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1686,
											"end": 1804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1810,
											"end": 2032,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1810,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1941,
											"end": 1943,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1930,
											"end": 1939,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1926,
											"end": 1944,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 1944,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 1944,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1954,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2020,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2004,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1954,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 1954,
											"end": 2025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1954,
											"end": 2025,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1954,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1810,
											"end": 2032,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1810,
											"end": 2032,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1810,
											"end": 2032,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1810,
											"end": 2032,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1810,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2038,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2143,
											"end": 2148,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2125,
											"end": 2149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2113,
											"end": 2150,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2255,
											"end": 2259,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2295,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2282,
											"end": 2291,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2278,
											"end": 2296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2296,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2306,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2374,
											"end": 2375,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2363,
											"end": 2372,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2376,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2356,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2306,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2306,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2306,
											"end": 2377,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2306,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2390,
											"end": 2512,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2390,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2463,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2481,
											"end": 2486,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2463,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2463,
											"end": 2487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2463,
											"end": 2487,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2463,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2456,
											"end": 2461,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2453,
											"end": 2488,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2443,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2443,
											"end": 2506,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2503,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2500,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2492,
											"end": 2504,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2443,
											"end": 2506,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2443,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2390,
											"end": 2512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2390,
											"end": 2512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2609,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2609,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2645,
											"end": 2650,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2618,
											"end": 2651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2651,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2618,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2722,
											"end": 2728,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2771,
											"end": 2773,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2759,
											"end": 2768,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2750,
											"end": 2757,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2769,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2742,
											"end": 2774,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2777,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2777,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2777,
											"end": 2856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2777,
											"end": 2856,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2777,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2897,
											"end": 2898,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 2967,
											"end": 2974,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2958,
											"end": 2964,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 2956,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 2965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2922,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2922,
											"end": 2975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2922,
											"end": 2975,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 2922,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 2975,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 2975,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2868,
											"end": 2985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2663,
											"end": 2992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2998,
											"end": 3662,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2998,
											"end": 3662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3203,
											"end": 3207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3241,
											"end": 3244,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 3230,
											"end": 3239,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3226,
											"end": 3245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3218,
											"end": 3245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3218,
											"end": 3245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 3255,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3326,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 3255,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3336,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 3404,
											"end": 3406,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3393,
											"end": 3402,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3389,
											"end": 3407,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3386,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3336,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 3336,
											"end": 3408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3336,
											"end": 3408,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 3336,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3418,
											"end": 3490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 3486,
											"end": 3488,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3475,
											"end": 3484,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3418,
											"end": 3490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 3418,
											"end": 3490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3418,
											"end": 3490,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 3418,
											"end": 3490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3500,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 3568,
											"end": 3570,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3557,
											"end": 3566,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3571,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3544,
											"end": 3550,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3500,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 3500,
											"end": 3572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3500,
											"end": 3572,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 3500,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 3650,
											"end": 3653,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3639,
											"end": 3648,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3635,
											"end": 3654,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3626,
											"end": 3632,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 3582,
											"end": 3655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3655,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 3582,
											"end": 3655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2998,
											"end": 3662,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 2998,
											"end": 3662,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2998,
											"end": 3662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2998,
											"end": 3662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2998,
											"end": 3662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2998,
											"end": 3662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2998,
											"end": 3662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2998,
											"end": 3662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2998,
											"end": 3662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3668,
											"end": 4000,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3668,
											"end": 4000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3789,
											"end": 3793,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3827,
											"end": 3829,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3816,
											"end": 3825,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3812,
											"end": 3830,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 3908,
											"end": 3909,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3897,
											"end": 3906,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3893,
											"end": 3910,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3884,
											"end": 3890,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 3840,
											"end": 3911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 3911,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 3840,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3921,
											"end": 3993,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 3989,
											"end": 3991,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3978,
											"end": 3987,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 3992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 3971,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3921,
											"end": 3993,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 3921,
											"end": 3993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3921,
											"end": 3993,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 3921,
											"end": 3993,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3668,
											"end": 4000,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3668,
											"end": 4000,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3668,
											"end": 4000,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3668,
											"end": 4000,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3668,
											"end": 4000,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3668,
											"end": 4000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4006,
											"end": 4122,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 4006,
											"end": 4122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 4091,
											"end": 4096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 4076,
											"end": 4097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4069,
											"end": 4074,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4098,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4056,
											"end": 4116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 4056,
											"end": 4116,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4109,
											"end": 4110,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4114,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4056,
											"end": 4116,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 4056,
											"end": 4116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4006,
											"end": 4122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4006,
											"end": 4122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4128,
											"end": 4265,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4128,
											"end": 4265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4182,
											"end": 4187,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4213,
											"end": 4219,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4207,
											"end": 4220,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4198,
											"end": 4220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4198,
											"end": 4220,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4229,
											"end": 4259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 4253,
											"end": 4258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4229,
											"end": 4259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 4229,
											"end": 4259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4229,
											"end": 4259,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 4229,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4128,
											"end": 4265,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4128,
											"end": 4265,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4128,
											"end": 4265,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4128,
											"end": 4265,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4128,
											"end": 4265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4271,
											"end": 4616,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 4271,
											"end": 4616,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4338,
											"end": 4344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4387,
											"end": 4389,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4375,
											"end": 4384,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4366,
											"end": 4373,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4362,
											"end": 4385,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4358,
											"end": 4390,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4474,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 4355,
											"end": 4474,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4393,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 4393,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 4393,
											"end": 4472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4393,
											"end": 4472,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 4393,
											"end": 4472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4474,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 4355,
											"end": 4474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4513,
											"end": 4514,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4538,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 4591,
											"end": 4598,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4588,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4580,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4567,
											"end": 4589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4538,
											"end": 4599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4599,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 4538,
											"end": 4599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4528,
											"end": 4599,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4528,
											"end": 4599,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4484,
											"end": 4609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4271,
											"end": 4616,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4271,
											"end": 4616,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4271,
											"end": 4616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4271,
											"end": 4616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4271,
											"end": 4616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4622,
											"end": 4802,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 4622,
											"end": 4802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 4747,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4667,
											"end": 4668,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4660,
											"end": 4748,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4767,
											"end": 4771,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 4764,
											"end": 4765,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4757,
											"end": 4772,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4791,
											"end": 4795,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4788,
											"end": 4789,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4781,
											"end": 4796,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4999,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 4808,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 4852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4868,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 4886,
											"end": 4887,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4868,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 4868,
											"end": 4888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4868,
											"end": 4888,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 4868,
											"end": 4888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4863,
											"end": 4888,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4863,
											"end": 4888,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 4920,
											"end": 4921,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 4902,
											"end": 4922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4922,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 4902,
											"end": 4922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4897,
											"end": 4922,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4897,
											"end": 4922,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4941,
											"end": 4942,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4938,
											"end": 4939,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4935,
											"end": 4943,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4932,
											"end": 4966,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4932,
											"end": 4966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 4932,
											"end": 4966,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4946,
											"end": 4964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 4946,
											"end": 4964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 4946,
											"end": 4964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4946,
											"end": 4964,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 4946,
											"end": 4964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4932,
											"end": 4966,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 4932,
											"end": 4966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4991,
											"end": 4992,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4988,
											"end": 4989,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4984,
											"end": 4993,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4976,
											"end": 4993,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4976,
											"end": 4993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4999,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4999,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5447,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5005,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5154,
											"end": 5158,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5192,
											"end": 5194,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5181,
											"end": 5190,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5195,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5169,
											"end": 5195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5169,
											"end": 5195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 5273,
											"end": 5274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5262,
											"end": 5271,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5258,
											"end": 5275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5255,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5205,
											"end": 5276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5276,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 5205,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5286,
											"end": 5358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 5354,
											"end": 5356,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5343,
											"end": 5352,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5339,
											"end": 5357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5330,
											"end": 5336,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5286,
											"end": 5358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5286,
											"end": 5358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5286,
											"end": 5358,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 5286,
											"end": 5358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5368,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 5436,
											"end": 5438,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5425,
											"end": 5434,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5412,
											"end": 5418,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5368,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 5368,
											"end": 5440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5368,
											"end": 5440,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 5368,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5447,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5447,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5453,
											"end": 5801,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5453,
											"end": 5801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5493,
											"end": 5500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5516,
											"end": 5536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 5534,
											"end": 5535,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5516,
											"end": 5536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 5516,
											"end": 5536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5516,
											"end": 5536,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 5516,
											"end": 5536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5511,
											"end": 5536,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5511,
											"end": 5536,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5570,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 5568,
											"end": 5569,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5570,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 5550,
											"end": 5570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5570,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 5550,
											"end": 5570,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5545,
											"end": 5570,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5545,
											"end": 5570,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5738,
											"end": 5739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5670,
											"end": 5736,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5666,
											"end": 5740,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5663,
											"end": 5664,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5741,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5655,
											"end": 5656,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5657,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5641,
											"end": 5658,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5637,
											"end": 5742,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5634,
											"end": 5765,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5634,
											"end": 5765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 5634,
											"end": 5765,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5745,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 5745,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 5745,
											"end": 5763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5745,
											"end": 5763,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 5745,
											"end": 5763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5634,
											"end": 5765,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 5634,
											"end": 5765,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5793,
											"end": 5794,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5790,
											"end": 5791,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5786,
											"end": 5795,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5775,
											"end": 5795,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5775,
											"end": 5795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5453,
											"end": 5801,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5453,
											"end": 5801,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5453,
											"end": 5801,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5453,
											"end": 5801,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5453,
											"end": 5801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5807,
											"end": 5987,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 5807,
											"end": 5987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5855,
											"end": 5932,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5852,
											"end": 5853,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5845,
											"end": 5933,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5952,
											"end": 5956,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 5949,
											"end": 5950,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5942,
											"end": 5957,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5976,
											"end": 5980,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5973,
											"end": 5974,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5966,
											"end": 5981,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5993,
											"end": 6178,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5993,
											"end": 6178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 6068,
											"end": 6069,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 6050,
											"end": 6070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6050,
											"end": 6070,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 6050,
											"end": 6070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6045,
											"end": 6070,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6045,
											"end": 6070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 6102,
											"end": 6103,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 6084,
											"end": 6104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6104,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 6084,
											"end": 6104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6079,
											"end": 6104,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6079,
											"end": 6104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6123,
											"end": 6124,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6113,
											"end": 6148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 6113,
											"end": 6148,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6128,
											"end": 6146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 6128,
											"end": 6146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 6128,
											"end": 6146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6128,
											"end": 6146,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 6128,
											"end": 6146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6113,
											"end": 6148,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 6113,
											"end": 6148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6170,
											"end": 6171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6167,
											"end": 6168,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6172,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6158,
											"end": 6172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6158,
											"end": 6172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5993,
											"end": 6178,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5993,
											"end": 6178,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5993,
											"end": 6178,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5993,
											"end": 6178,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5993,
											"end": 6178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6184,
											"end": 6489,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 6184,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6224,
											"end": 6227,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6243,
											"end": 6263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 6261,
											"end": 6262,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6243,
											"end": 6263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 6243,
											"end": 6263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6243,
											"end": 6263,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 6243,
											"end": 6263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6238,
											"end": 6263,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6238,
											"end": 6263,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6277,
											"end": 6297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 6295,
											"end": 6296,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6277,
											"end": 6297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 6277,
											"end": 6297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6277,
											"end": 6297,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 6277,
											"end": 6297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6297,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6297,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6432,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6363,
											"end": 6429,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6359,
											"end": 6433,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6353,
											"end": 6434,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6350,
											"end": 6457,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6350,
											"end": 6457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 6350,
											"end": 6457,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6437,
											"end": 6455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 6437,
											"end": 6455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 6437,
											"end": 6455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6437,
											"end": 6455,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 6437,
											"end": 6455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6350,
											"end": 6457,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 6350,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6481,
											"end": 6482,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6478,
											"end": 6479,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6474,
											"end": 6483,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6467,
											"end": 6483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6467,
											"end": 6483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6184,
											"end": 6489,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6184,
											"end": 6489,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6184,
											"end": 6489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6184,
											"end": 6489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6184,
											"end": 6489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6664,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6495,
											"end": 6664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6590,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6613,
											"end": 6619,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6611,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6601,
											"end": 6620,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6653,
											"end": 6657,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6648,
											"end": 6651,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6644,
											"end": 6658,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6629,
											"end": 6658,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6629,
											"end": 6658,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6664,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6664,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6670,
											"end": 6829,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 6670,
											"end": 6829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6821,
											"name": "PUSH",
											"source": 1,
											"value": "6E6F74206F776E65720000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6806,
											"end": 6807,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6798,
											"end": 6804,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6808,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6787,
											"end": 6822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6670,
											"end": 6829,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6670,
											"end": 6829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7200,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 6835,
											"end": 7200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6977,
											"end": 6980,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6998,
											"end": 7064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 7062,
											"end": 7063,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 7057,
											"end": 7060,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6998,
											"end": 7064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6998,
											"end": 7064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6998,
											"end": 7064,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 6998,
											"end": 7064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6991,
											"end": 7064,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6991,
											"end": 7064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 7162,
											"end": 7165,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 7073,
											"end": 7166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7166,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 7073,
											"end": 7166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7193,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7186,
											"end": 7189,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7182,
											"end": 7194,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7175,
											"end": 7194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7175,
											"end": 7194,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7200,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7200,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7200,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7206,
											"end": 7625,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 7206,
											"end": 7625,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7376,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7410,
											"end": 7412,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7399,
											"end": 7408,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7395,
											"end": 7413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7387,
											"end": 7413,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7387,
											"end": 7413,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7468,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7457,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7445,
											"end": 7446,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7434,
											"end": 7443,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7430,
											"end": 7447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7470,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7487,
											"end": 7618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 7613,
											"end": 7617,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7487,
											"end": 7618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7487,
											"end": 7618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7487,
											"end": 7618,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 7487,
											"end": 7618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7479,
											"end": 7618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7479,
											"end": 7618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7206,
											"end": 7625,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7206,
											"end": 7625,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7206,
											"end": 7625,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7206,
											"end": 7625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/自己写个矿池,定息矿池.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"Stake(uint256)": "227a473b",
							"User_Map(address)": "8c93ecff",
							"harvest()": "4641257d",
							"lastTotokenRatio()": "5e9f4435",
							"newTotokenRatio()": "529aca49",
							"owner()": "8da5cb5b",
							"ratio()": "71ca337d",
							"setRatio(uint256)": "b2237ba3",
							"stakeSupple()": "d942727f",
							"staketoken()": "dab2997b",
							"totoken()": "2c46502d",
							"withDraw()": "0fdb1c10"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staketoken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_totoken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"Approveal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"Trasfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amout\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"User_Map\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"last_Stake_Time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"last_totoken_ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"whole_ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"last_totoken_Time\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTotokenRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newTotokenRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ratio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ratio\",\"type\":\"uint256\"}],\"name\":\"setRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeSupple\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"staketoken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totoken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withDraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/\\u81ea\\u5df1\\u5199\\u4e2a\\u77ff\\u6c60,\\u5b9a\\u606f\\u77ff\\u6c60.sol\":\"StakeContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/\\u81ea\\u5df1\\u5199\\u4e2a\\u77ff\\u6c60,\\u5b9a\\u606f\\u77ff\\u6c60.sol\":{\"keccak256\":\"0xcd04dd756790d24748bc2db0349e28df15b4caaa6540d0c4dccf42487bb15693\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32f35b8fec53e7646445d3fbdebe71ec5892063711973928c53e2e130d4b7291\",\"dweb:/ipfs/QmaB849Wa28RcmLWJshjmtYNBKvL8DvU1xfXwqjQeFCcZX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 70,
								"contract": "contracts/自己写个矿池,定息矿池.sol:StakeContract",
								"label": "ratio",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 72,
								"contract": "contracts/自己写个矿池,定息矿池.sol:StakeContract",
								"label": "staketoken",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 74,
								"contract": "contracts/自己写个矿池,定息矿池.sol:StakeContract",
								"label": "totoken",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 76,
								"contract": "contracts/自己写个矿池,定息矿池.sol:StakeContract",
								"label": "stakeSupple",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 78,
								"contract": "contracts/自己写个矿池,定息矿池.sol:StakeContract",
								"label": "owner",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 116,
								"contract": "contracts/自己写个矿池,定息矿池.sol:StakeContract",
								"label": "User_Map",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(User)111_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(User)111_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct StakeContract.User)",
								"numberOfBytes": "32",
								"value": "t_struct(User)111_storage"
							},
							"t_struct(User)111_storage": {
								"encoding": "inplace",
								"label": "struct StakeContract.User",
								"members": [
									{
										"astId": 102,
										"contract": "contracts/自己写个矿池,定息矿池.sol:StakeContract",
										"label": "stakeNumber",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 104,
										"contract": "contracts/自己写个矿池,定息矿池.sol:StakeContract",
										"label": "last_Stake_Time",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 106,
										"contract": "contracts/自己写个矿池,定息矿池.sol:StakeContract",
										"label": "last_totoken_ratio",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 108,
										"contract": "contracts/自己写个矿池,定息矿池.sol:StakeContract",
										"label": "whole_ratio",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 110,
										"contract": "contracts/自己写个矿池,定息矿池.sol:StakeContract",
										"label": "last_totoken_Time",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/自己写个矿池,定息矿池.sol": {
				"ast": {
					"absolutePath": "contracts/自己写个矿池,定息矿池.sol",
					"exportedSymbols": {
						"IERC20": [
							68
						],
						"StakeContract": [
							477
						]
					},
					"id": 478,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 68,
							"linearizedBaseContracts": [
								68
							],
							"name": "IERC20",
							"nameLocation": "78:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "101:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "112:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "138:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "138:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "137:6:0"
									},
									"scope": 68,
									"src": "92:52:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 13,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "161:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "179:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "171:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "171:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "170:17:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "211:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "211:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "210:6:0"
									},
									"scope": 68,
									"src": "152:65:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 22,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "234:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "251:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "243:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "243:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "267:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "262:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "262:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "242:31:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "292:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 19,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "292:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "291:6:0"
									},
									"scope": 68,
									"src": "225:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "315:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "333:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "325:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "348:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "340:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:32:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "380:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "380:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:6:0"
									},
									"scope": 68,
									"src": "306:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 40,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "403:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "419:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "411:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "411:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "433:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "428:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "428:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "410:29:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "458:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 37,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "458:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "457:6:0"
									},
									"scope": 68,
									"src": "394:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 51,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "481:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "502:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "494:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "494:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "518:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "510:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "510:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "534:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "529:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "529:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "493:47:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "559:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 48,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "559:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "558:6:0"
									},
									"scope": 68,
									"src": "472:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "1fd6ebb971d137acf3f01670862b8a96758cfc7e39dccb093e68daf461b0262c",
									"id": 59,
									"name": "Trasfer",
									"nameLocation": "579:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "603:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "587:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "587:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "625:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "609:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"indexed": false,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "634:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "629:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "629:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "586:54:0"
									},
									"src": "573:68:0"
								},
								{
									"anonymous": false,
									"eventSelector": "cb5c1016bb7399d39f0ec8e1cda736e7b512f85cd9449083de61a54db3c338ad",
									"id": 67,
									"name": "Approveal",
									"nameLocation": "653:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "679:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "663:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "702:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "686:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "716:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "711:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "711:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "662:60:0"
									},
									"src": "647:76:0"
								}
							],
							"scope": 478,
							"src": "68:660:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StakeContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 477,
							"linearizedBaseContracts": [
								477
							],
							"name": "StakeContract",
							"nameLocation": "741:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "71ca337d",
									"id": 70,
									"mutability": "mutable",
									"name": "ratio",
									"nameLocation": "805:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 477,
									"src": "793:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 69,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "793:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dab2997b",
									"id": 72,
									"mutability": "mutable",
									"name": "staketoken",
									"nameLocation": "832:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 477,
									"src": "817:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 71,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "817:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2c46502d",
									"id": 74,
									"mutability": "mutable",
									"name": "totoken",
									"nameLocation": "864:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 477,
									"src": "849:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 73,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "849:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d942727f",
									"id": 76,
									"mutability": "mutable",
									"name": "stakeSupple",
									"nameLocation": "890:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 477,
									"src": "878:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 75,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "878:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 78,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "923:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 477,
									"src": "908:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 77,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "908:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "1fd6ebb971d137acf3f01670862b8a96758cfc7e39dccb093e68daf461b0262c",
									"id": 86,
									"name": "Trasfer",
									"nameLocation": "947:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "971:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "955:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 79,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "955:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "993:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "977:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "977:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"indexed": false,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "997:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "997:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "954:54:0"
									},
									"src": "941:68:0"
								},
								{
									"anonymous": false,
									"eventSelector": "cb5c1016bb7399d39f0ec8e1cda736e7b512f85cd9449083de61a54db3c338ad",
									"id": 94,
									"name": "Approveal",
									"nameLocation": "1021:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1047:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1031:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 87,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1070:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1054:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"indexed": false,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "1084:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1079:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1030:60:0"
									},
									"src": "1015:76:0"
								},
								{
									"anonymous": false,
									"eventSelector": "a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b",
									"id": 100,
									"name": "transfer",
									"nameLocation": "1103:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1128:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "1112:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1112:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"indexed": false,
												"mutability": "mutable",
												"name": "amout",
												"nameLocation": "1137:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "1132:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1132:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1111:32:0"
									},
									"src": "1097:47:0"
								},
								{
									"canonicalName": "StakeContract.User",
									"id": 111,
									"members": [
										{
											"constant": false,
											"id": 102,
											"mutability": "mutable",
											"name": "stakeNumber",
											"nameLocation": "1180:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 111,
											"src": "1175:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 101,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1175:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 104,
											"mutability": "mutable",
											"name": "last_Stake_Time",
											"nameLocation": "1207:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 111,
											"src": "1202:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 103,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1202:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 106,
											"mutability": "mutable",
											"name": "last_totoken_ratio",
											"nameLocation": "1238:18:0",
											"nodeType": "VariableDeclaration",
											"scope": 111,
											"src": "1233:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 105,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1233:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 108,
											"mutability": "mutable",
											"name": "whole_ratio",
											"nameLocation": "1272:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 111,
											"src": "1267:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 107,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1267:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 110,
											"mutability": "mutable",
											"name": "last_totoken_Time",
											"nameLocation": "1299:17:0",
											"nodeType": "VariableDeclaration",
											"scope": 111,
											"src": "1294:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 109,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1294:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "User",
									"nameLocation": "1159:4:0",
									"nodeType": "StructDefinition",
									"scope": 477,
									"src": "1152:172:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8c93ecff",
									"id": 116,
									"mutability": "mutable",
									"name": "User_Map",
									"nameLocation": "1364:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 477,
									"src": "1332:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
										"typeString": "mapping(address => struct StakeContract.User)"
									},
									"typeName": {
										"id": 115,
										"keyType": {
											"id": 112,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1340:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1332:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
											"typeString": "mapping(address => struct StakeContract.User)"
										},
										"valueType": {
											"id": 114,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 113,
												"name": "User",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 111,
												"src": "1351:4:0"
											},
											"referencedDeclaration": 111,
											"src": "1351:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_User_$111_storage_ptr",
												"typeString": "struct StakeContract.User"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "1433:286:0",
										"statements": [
											{
												"expression": {
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 123,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 78,
														"src": "1444:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 124,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1452:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1452:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1444:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "1444:18:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 129,
																"name": "_staketoken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "1481:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1504:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1496:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 130,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1496:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1496:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1481:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4f542c532030582041444452455353",
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1507:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7",
																"typeString": "literal_string \"NOT,S 0X ADDRESS\""
															},
															"value": "NOT,S 0X ADDRESS"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7",
																"typeString": "literal_string \"NOT,S 0X ADDRESS\""
															}
														],
														"id": 128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1473:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1473:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "1473:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 139,
																"name": "_totoken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 120,
																"src": "1545:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1565:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1557:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 140,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1557:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1557:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1545:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4f542c532030582041444452455353",
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1568:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7",
																"typeString": "literal_string \"NOT,S 0X ADDRESS\""
															},
															"value": "NOT,S 0X ADDRESS"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc8656ae6be26b3789f6ff5b051a4227e239fc2e3a6e0fd8e7e964dc474c29e7",
																"typeString": "literal_string \"NOT,S 0X ADDRESS\""
															}
														],
														"id": 138,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1537:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1537:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 147,
												"nodeType": "ExpressionStatement",
												"src": "1537:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 149,
																"name": "_staketoken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "1606:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 150,
																"name": "_totoken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 120,
																"src": "1621:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1606:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4545442061677265656d656e74",
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1630:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c53404d4246b0640c5d546a4b55fb182a6f0c9ba5aa404eb9d02e6863598390c",
																"typeString": "literal_string \"NEED agreement\""
															},
															"value": "NEED agreement"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c53404d4246b0640c5d546a4b55fb182a6f0c9ba5aa404eb9d02e6863598390c",
																"typeString": "literal_string \"NEED agreement\""
															}
														],
														"id": 148,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1598:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1598:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 154,
												"nodeType": "ExpressionStatement",
												"src": "1598:49:0"
											},
											{
												"expression": {
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 155,
														"name": "staketoken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "1658:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 156,
														"name": "_staketoken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "1671:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1658:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 158,
												"nodeType": "ExpressionStatement",
												"src": "1658:24:0"
											},
											{
												"expression": {
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 159,
														"name": "totoken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "1693:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 160,
														"name": "_totoken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "1703:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1693:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "1693:18:0"
											}
										]
									},
									"id": 164,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "_staketoken",
												"nameLocation": "1402:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "1394:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1394:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "_totoken",
												"nameLocation": "1423:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "1415:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1415:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1393:39:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1433:0:0"
									},
									"scope": 477,
									"src": "1381:338:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "1748:73:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 167,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1767:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1767:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 169,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 78,
																"src": "1781:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1767:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f74206f776e6572",
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1789:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																"typeString": "literal_string \"not owner\""
															},
															"value": "not owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																"typeString": "literal_string \"not owner\""
															}
														],
														"id": 166,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1759:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1759:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "1759:42:0"
											},
											{
												"id": 174,
												"nodeType": "PlaceholderStatement",
												"src": "1812:1:0"
											}
										]
									},
									"id": 176,
									"name": "onlyOwner",
									"nameLocation": "1736:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1745:2:0"
									},
									"src": "1727:94:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1982:42:0",
										"statements": [
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "ratio",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "1997:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "_ratio",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "2005:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1997:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1997:14:0"
											}
										]
									},
									"functionSelector": "b2237ba3",
									"id": 188,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 181,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 180,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 176,
												"src": "1972:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1972:9:0"
										}
									],
									"name": "setRatio",
									"nameLocation": "1941:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "_ratio",
												"nameLocation": "1955:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1950:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1950:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1949:13:0"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1982:0:0"
									},
									"scope": 477,
									"src": "1932:92:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "2082:592:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 199,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2127:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2127:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 203,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2147:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakeContract_$477",
																		"typeString": "contract StakeContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakeContract_$477",
																		"typeString": "contract StakeContract"
																	}
																],
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2139:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 201,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2139:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2139:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 205,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "2154:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 196,
																	"name": "staketoken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 72,
																	"src": "2102:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 195,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "2095:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$68_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2095:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$68",
																"typeString": "contract IERC20"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 51,
														"src": "2095:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2095:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "2095:67:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 209,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2189:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2189:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 213,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2209:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakeContract_$477",
																		"typeString": "contract StakeContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakeContract_$477",
																		"typeString": "contract StakeContract"
																	}
																],
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2201:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 211,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2201:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2201:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 215,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "2216:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 208,
														"name": "Trasfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2181:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2181:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 217,
												"nodeType": "EmitStatement",
												"src": "2176:48:0"
											},
											{
												"expression": {
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 218,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "2237:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 221,
															"indexExpression": {
																"expression": {
																	"id": 219,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2246:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2246:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2237:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$111_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 222,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "last_totoken_ratio",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 106,
														"src": "2237:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 223,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "2280:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "2280:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 225,
																				"name": "User_Map",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 116,
																				"src": "2298:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																					"typeString": "mapping(address => struct StakeContract.User storage ref)"
																				}
																			},
																			"id": 228,
																			"indexExpression": {
																				"expression": {
																					"id": 226,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2307:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 227,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2307:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2298:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_User_$111_storage",
																				"typeString": "struct StakeContract.User storage ref"
																			}
																		},
																		"id": 229,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "last_Stake_Time",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 104,
																		"src": "2298:36:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2280:54:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 231,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2279:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 243,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 240,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 238,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"baseExpression": {
																								"id": 232,
																								"name": "User_Map",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 116,
																								"src": "2340:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																									"typeString": "mapping(address => struct StakeContract.User storage ref)"
																								}
																							},
																							"id": 235,
																							"indexExpression": {
																								"expression": {
																									"id": 233,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "2349:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 234,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"src": "2349:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "2340:20:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_User_$111_storage",
																								"typeString": "struct StakeContract.User storage ref"
																							}
																						},
																						"id": 236,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "stakeNumber",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 102,
																						"src": "2340:32:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 237,
																						"name": "ratio",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 70,
																						"src": "2375:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2340:40:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "313030",
																					"id": 239,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2382:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100_by_1",
																						"typeString": "int_const 100"
																					},
																					"value": "100"
																				},
																				"src": "2340:45:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 241,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2339:47:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "3331353336303030",
																		"id": 242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2389:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_31536000_by_1",
																			"typeString": "int_const 31536000"
																		},
																		"value": "31536000"
																	},
																	"src": "2339:58:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 244,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2338:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2279:119:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2237:161:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "2237:161:0"
											},
											{
												"expression": {
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 248,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "2411:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 251,
															"indexExpression": {
																"expression": {
																	"id": 249,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2420:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2420:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2411:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$111_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 252,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakeNumber",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 102,
														"src": "2411:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 253,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "2447:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2411:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 255,
												"nodeType": "ExpressionStatement",
												"src": "2411:43:0"
											},
											{
												"expression": {
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 256,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "2465:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 259,
															"indexExpression": {
																"expression": {
																	"id": 257,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2474:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2474:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2465:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$111_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 260,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "last_Stake_Time",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 104,
														"src": "2465:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 261,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2504:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2504:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2465:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 264,
												"nodeType": "ExpressionStatement",
												"src": "2465:54:0"
											},
											{
												"expression": {
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 265,
														"name": "stakeSupple",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "2530:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 266,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "2545:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2530:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "2530:22:0"
											},
											{
												"expression": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 269,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "2563:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 272,
															"indexExpression": {
																"expression": {
																	"id": 270,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2572:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2572:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2563:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$111_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 273,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "last_totoken_Time",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 110,
														"src": "2563:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"id": 274,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "2604:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 277,
															"indexExpression": {
																"expression": {
																	"id": 275,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2613:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2613:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2604:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$111_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "last_Stake_Time",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 104,
														"src": "2604:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2563:77:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "2563:77:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2658:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 194,
												"id": 282,
												"nodeType": "Return",
												"src": "2651:11:0"
											}
										]
									},
									"functionSelector": "227a473b",
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Stake",
									"nameLocation": "2041:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2052:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "2047:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2047:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2046:14:0"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "2077:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 192,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2077:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2076:6:0"
									},
									"scope": 477,
									"src": "2032:642:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "2725:308:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 293,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2764:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2764:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 295,
																	"name": "User_Map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "2776:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																		"typeString": "mapping(address => struct StakeContract.User storage ref)"
																	}
																},
																"id": 298,
																"indexExpression": {
																	"expression": {
																		"id": 296,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2785:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2785:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2776:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$111_storage",
																	"typeString": "struct StakeContract.User storage ref"
																}
															},
															"id": 299,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakeNumber",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 102,
															"src": "2776:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 290,
																	"name": "staketoken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 72,
																	"src": "2743:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 289,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "2736:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$68_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2736:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$68",
																"typeString": "contract IERC20"
															}
														},
														"id": 292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "2736:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2736:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "2736:73:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 303,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2837:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2837:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 305,
																	"name": "User_Map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "2849:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																		"typeString": "mapping(address => struct StakeContract.User storage ref)"
																	}
																},
																"id": 308,
																"indexExpression": {
																	"expression": {
																		"id": 306,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2858:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2858:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2849:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$111_storage",
																	"typeString": "struct StakeContract.User storage ref"
																}
															},
															"id": 309,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakeNumber",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 102,
															"src": "2849:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 302,
														"name": "transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "2828:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2828:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 311,
												"nodeType": "EmitStatement",
												"src": "2823:59:0"
											},
											{
												"expression": {
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 312,
														"name": "stakeSupple",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "2907:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"id": 313,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "2922:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 316,
															"indexExpression": {
																"expression": {
																	"id": 314,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2931:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2931:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2922:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$111_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 317,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "stakeNumber",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 102,
														"src": "2922:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2907:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "2907:47:0"
											},
											{
												"expression": {
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 320,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "2965:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 323,
															"indexExpression": {
																"expression": {
																	"id": 321,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2974:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2974:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2965:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$111_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 324,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakeNumber",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 102,
														"src": "2965:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 325,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3000:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2965:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "2965:36:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3021:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 288,
												"id": 329,
												"nodeType": "Return",
												"src": "3014:11:0"
											}
										]
									},
									"functionSelector": "0fdb1c10",
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withDraw",
									"nameLocation": "2691:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2700:2:0"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "2719:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2719:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2718:6:0"
									},
									"scope": 477,
									"src": "2682:351:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "3082:561:0",
										"statements": [
											{
												"expression": {
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 336,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "3093:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 339,
															"indexExpression": {
																"expression": {
																	"id": 337,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3102:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3102:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3093:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$111_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "whole_ratio",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 108,
														"src": "3093:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 341,
																	"name": "User_Map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "3128:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																		"typeString": "mapping(address => struct StakeContract.User storage ref)"
																	}
																},
																"id": 344,
																"indexExpression": {
																	"expression": {
																		"id": 342,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3137:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3137:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3128:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$111_storage",
																	"typeString": "struct StakeContract.User storage ref"
																}
															},
															"id": 345,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "last_totoken_ratio",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 106,
															"src": "3128:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 346,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "3171:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 347,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "3171:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 348,
																					"name": "User_Map",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 116,
																					"src": "3189:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																						"typeString": "mapping(address => struct StakeContract.User storage ref)"
																					}
																				},
																				"id": 351,
																				"indexExpression": {
																					"expression": {
																						"id": 349,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "3198:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 350,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "3198:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3189:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_User_$111_storage",
																					"typeString": "struct StakeContract.User storage ref"
																				}
																			},
																			"id": 352,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "last_Stake_Time",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 104,
																			"src": "3189:36:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3171:54:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 354,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3170:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 363,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 361,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 355,
																									"name": "User_Map",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 116,
																									"src": "3231:8:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																										"typeString": "mapping(address => struct StakeContract.User storage ref)"
																									}
																								},
																								"id": 358,
																								"indexExpression": {
																									"expression": {
																										"id": 356,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "3240:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 357,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "3240:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "3231:20:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_User_$111_storage",
																									"typeString": "struct StakeContract.User storage ref"
																								}
																							},
																							"id": 359,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "stakeNumber",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 102,
																							"src": "3231:32:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 360,
																							"name": "ratio",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 70,
																							"src": "3266:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3231:40:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "/",
																					"rightExpression": {
																						"hexValue": "313030",
																						"id": 362,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3273:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_100_by_1",
																							"typeString": "int_const 100"
																						},
																						"value": "100"
																					},
																					"src": "3231:45:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 364,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3230:47:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "3331353336303030",
																			"id": 365,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3280:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_31536000_by_1",
																				"typeString": "int_const 31536000"
																			},
																			"value": "31536000"
																		},
																		"src": "3230:58:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 367,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3229:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3170:119:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3128:161:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3093:196:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 371,
												"nodeType": "ExpressionStatement",
												"src": "3093:196:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 376,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3325:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3325:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 378,
																	"name": "User_Map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "3337:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																		"typeString": "mapping(address => struct StakeContract.User storage ref)"
																	}
																},
																"id": 381,
																"indexExpression": {
																	"expression": {
																		"id": 379,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3346:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3346:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3337:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$111_storage",
																	"typeString": "struct StakeContract.User storage ref"
																}
															},
															"id": 382,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "whole_ratio",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 108,
															"src": "3337:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 373,
																	"name": "totoken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 74,
																	"src": "3307:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 372,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "3300:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$68_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3300:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$68",
																"typeString": "contract IERC20"
															}
														},
														"id": 375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "3300:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3300:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "3300:70:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 386,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3398:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3398:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 388,
																	"name": "User_Map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "3410:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																		"typeString": "mapping(address => struct StakeContract.User storage ref)"
																	}
																},
																"id": 391,
																"indexExpression": {
																	"expression": {
																		"id": 389,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3419:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3419:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3410:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$111_storage",
																	"typeString": "struct StakeContract.User storage ref"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "whole_ratio",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 108,
															"src": "3410:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 385,
														"name": "transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "3389:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3389:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 394,
												"nodeType": "EmitStatement",
												"src": "3384:59:0"
											},
											{
												"expression": {
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 395,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "3456:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 398,
															"indexExpression": {
																"expression": {
																	"id": 396,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3465:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3465:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3456:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$111_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 399,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "whole_ratio",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 108,
														"src": "3456:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 400,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3491:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3456:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 402,
												"nodeType": "ExpressionStatement",
												"src": "3456:36:0"
											},
											{
												"expression": {
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 403,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "3503:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 406,
															"indexExpression": {
																"expression": {
																	"id": 404,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3512:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3512:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3503:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$111_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 407,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "last_totoken_ratio",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 106,
														"src": "3503:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 408,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3545:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3503:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "3503:43:0"
											},
											{
												"expression": {
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 411,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "3557:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 414,
															"indexExpression": {
																"expression": {
																	"id": 412,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3566:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3566:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3557:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$111_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 415,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "last_totoken_Time",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 110,
														"src": "3557:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 416,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3598:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 417,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3598:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3557:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 419,
												"nodeType": "ExpressionStatement",
												"src": "3557:56:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3631:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 335,
												"id": 421,
												"nodeType": "Return",
												"src": "3624:11:0"
											}
										]
									},
									"functionSelector": "4641257d",
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "harvest",
									"nameLocation": "3050:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3057:2:0"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "3076:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 333,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3076:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3075:6:0"
									},
									"scope": 477,
									"src": "3041:602:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "4046:233:0",
										"statements": [
											{
												"assignments": [
													429
												],
												"declarations": [
													{
														"constant": false,
														"id": 429,
														"mutability": "mutable",
														"name": "newtime",
														"nameLocation": "4062:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "4057:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 428,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4057:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 430,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4072:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4072:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 432,
																"name": "User_Map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "4090:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																	"typeString": "mapping(address => struct StakeContract.User storage ref)"
																}
															},
															"id": 435,
															"indexExpression": {
																"expression": {
																	"id": 433,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4099:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4099:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4090:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$111_storage",
																"typeString": "struct StakeContract.User storage ref"
															}
														},
														"id": 436,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "last_totoken_Time",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 110,
														"src": "4090:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4072:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4057:71:0"
											},
											{
												"assignments": [
													440
												],
												"declarations": [
													{
														"constant": false,
														"id": 440,
														"mutability": "mutable",
														"name": "newTotokenRatione",
														"nameLocation": "4144:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "4139:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 439,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4139:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 456,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 441,
														"name": "newtime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "4164:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 450,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 448,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"baseExpression": {
																							"id": 442,
																							"name": "User_Map",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 116,
																							"src": "4176:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																								"typeString": "mapping(address => struct StakeContract.User storage ref)"
																							}
																						},
																						"id": 445,
																						"indexExpression": {
																							"expression": {
																								"id": 443,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "4185:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 444,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "4185:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "4176:20:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_User_$111_storage",
																							"typeString": "struct StakeContract.User storage ref"
																						}
																					},
																					"id": 446,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "stakeNumber",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 102,
																					"src": "4176:32:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 447,
																					"name": "ratio",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 70,
																					"src": "4211:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4176:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "313030",
																				"id": 449,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4218:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"src": "4176:45:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 451,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4175:47:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "3331353336303030",
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4225:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_31536000_by_1",
																		"typeString": "int_const 31536000"
																	},
																	"value": "31536000"
																},
																"src": "4175:58:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 454,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4174:60:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4164:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4139:95:0"
											},
											{
												"expression": {
													"id": 457,
													"name": "newTotokenRatione",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 440,
													"src": "4252:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 427,
												"id": 458,
												"nodeType": "Return",
												"src": "4245:24:0"
											}
										]
									},
									"functionSelector": "529aca49",
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "newTotokenRatio",
									"nameLocation": "4001:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4016:2:0"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "4040:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4040:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4039:6:0"
									},
									"scope": 477,
									"src": "3992:287:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "4340:118:0",
										"statements": [
											{
												"assignments": [
													466
												],
												"declarations": [
													{
														"constant": false,
														"id": 466,
														"mutability": "mutable",
														"name": "_lastTotokenRatio",
														"nameLocation": "4356:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 475,
														"src": "4351:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 465,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4351:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 472,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 467,
															"name": "User_Map",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "4376:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$111_storage_$",
																"typeString": "mapping(address => struct StakeContract.User storage ref)"
															}
														},
														"id": 470,
														"indexExpression": {
															"expression": {
																"id": 468,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4385:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4385:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4376:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$111_storage",
															"typeString": "struct StakeContract.User storage ref"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "last_totoken_ratio",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 106,
													"src": "4376:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4351:64:0"
											},
											{
												"expression": {
													"id": 473,
													"name": "_lastTotokenRatio",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 466,
													"src": "4433:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 464,
												"id": 474,
												"nodeType": "Return",
												"src": "4426:24:0"
											}
										]
									},
									"functionSelector": "5e9f4435",
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lastTotokenRatio",
									"nameLocation": "4296:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4312:2:0"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "4334:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4334:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4333:6:0"
									},
									"scope": 477,
									"src": "4287:171:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 478,
							"src": "732:4584:0",
							"usedErrors": []
						}
					],
					"src": "38:5280:0"
				},
				"id": 0
			}
		}
	}
}